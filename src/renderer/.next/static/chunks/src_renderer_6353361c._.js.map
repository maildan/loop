{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/loop/loop/src/renderer/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\n/**\n * 🔥 기가차드 유틸리티: Tailwind 클래스 병합\n * clsx와 tailwind-merge를 결합하여 조건부 클래스와 중복 제거를 동시에 처리\n */\nexport function cn(...inputs: ClassValue[]): string {\n  return twMerge(clsx(inputs));\n}\n\n/**\n * 🔥 기가차드 유틸리티: 타입 안전한 키 추출\n */\nexport function getObjectKeys<T extends Record<string, unknown>>(obj: T): Array<keyof T> {\n  return Object.keys(obj) as Array<keyof T>;\n}\n\n/**\n * 🔥 기가차드 유틸리티: 딜레이 함수\n */\nexport function delay(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n/**\n * 🔥 기가차드 유틸리티: 디바운스\n */\nexport function debounce<T extends unknown[]>(\n  func: (...args: T) => void,\n  waitMs: number\n): (...args: T) => void {\n  let timeoutId: NodeJS.Timeout | null = null;\n  \n  return (...args: T): void => {\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n    }\n    \n    timeoutId = setTimeout(() => {\n      func(...args);\n    }, waitMs);\n  };\n}\n\n/**\n * 🔥 기가차드 유틸리티: 포맷팅\n */\nexport function formatNumber(num: number): string {\n  return new Intl.NumberFormat('ko-KR').format(num);\n}\n\nexport function formatDate(date: Date): string {\n  return new Intl.DateTimeFormat('ko-KR', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  }).format(date);\n}\n\n/**\n * 🔥 기가차드 유틸리티: 타입 가드\n */\nexport function isString(value: unknown): value is string {\n  return typeof value === 'string';\n}\n\nexport function isNumber(value: unknown): value is number {\n  return typeof value === 'number' && !isNaN(value);\n}\n\nexport function isArray<T>(value: unknown): value is T[] {\n  return Array.isArray(value);\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AACA;;;AAMO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB;AAKO,SAAS,cAAiD,GAAM;IACrE,OAAO,OAAO,IAAI,CAAC;AACrB;AAKO,SAAS,MAAM,EAAU;IAC9B,OAAO,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;AACpD;AAKO,SAAS,SACd,IAA0B,EAC1B,MAAc;IAEd,IAAI,YAAmC;IAEvC,OAAO,CAAC,GAAG;QACT,IAAI,WAAW;YACb,aAAa;QACf;QAEA,YAAY,WAAW;YACrB,QAAQ;QACV,GAAG;IACL;AACF;AAKO,SAAS,aAAa,GAAW;IACtC,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS,MAAM,CAAC;AAC/C;AAEO,SAAS,WAAW,IAAU;IACnC,OAAO,IAAI,KAAK,cAAc,CAAC,SAAS;QACtC,MAAM;QACN,OAAO;QACP,KAAK;IACP,GAAG,MAAM,CAAC;AACZ;AAKO,SAAS,SAAS,KAAc;IACrC,OAAO,OAAO,UAAU;AAC1B;AAEO,SAAS,SAAS,KAAc;IACrC,OAAO,OAAO,UAAU,YAAY,CAAC,MAAM;AAC7C;AAEO,SAAS,QAAW,KAAc;IACvC,OAAO,MAAM,OAAO,CAAC;AACvB","debugId":null}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/loop/loop/src/renderer/components/ui/Button.tsx"],"sourcesContent":["'use client';\n\nimport { forwardRef, ButtonHTMLAttributes, ReactNode } from 'react';\nimport { cn } from '../../lib/utils';\nimport { Loader2 } from 'lucide-react';\n\n// 🔥 기가차드 규칙: 프리컴파일된 스타일 상수 - 작가 친화적 다크모드\nconst BUTTON_STYLES = {\n  base: 'inline-flex items-center justify-center rounded-lg font-medium transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none',\n  variants: {\n    primary: 'bg-blue-600 text-white hover:bg-blue-700 focus:ring-blue-500 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-400',\n    secondary: 'bg-slate-200 text-slate-900 hover:bg-slate-300 focus:ring-slate-500 dark:bg-slate-700 dark:text-slate-100 dark:hover:bg-slate-600 dark:focus:ring-slate-400',\n    outline: 'border border-slate-300 bg-transparent text-slate-700 hover:bg-slate-50 focus:ring-slate-500 dark:border-slate-600 dark:text-slate-300 dark:hover:bg-slate-800 dark:focus:ring-slate-400',\n    ghost: 'text-slate-700 hover:bg-slate-100 focus:ring-slate-500 dark:text-slate-300 dark:hover:bg-slate-800 dark:focus:ring-slate-400',\n    destructive: 'bg-red-600 text-white hover:bg-red-700 focus:ring-red-500 dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-400'\n  },\n  sizes: {\n    sm: 'px-3 py-1.5 text-sm',\n    md: 'px-4 py-2 text-sm',\n    lg: 'px-6 py-3 text-base',\n    icon: 'p-2'\n  }\n} as const;\n\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  readonly variant?: keyof typeof BUTTON_STYLES.variants;\n  readonly size?: keyof typeof BUTTON_STYLES.sizes;\n  readonly loading?: boolean;\n  readonly loadingText?: string;\n  readonly children: ReactNode;\n  readonly 'aria-label'?: string;\n}\n\n// 🔥 기가차드 규칙: forwardRef와 명시적 타입\nexport const Button = forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ \n    variant = 'primary', \n    size = 'md',\n    loading = false,\n    loadingText,\n    disabled,\n    className,\n    children,\n    'aria-label': ariaLabel,\n    ...props \n  }, ref) => {\n    \n    const isDisabled = disabled || loading;\n    \n    const buttonClassName = cn(\n      BUTTON_STYLES.base,\n      BUTTON_STYLES.variants[variant],\n      BUTTON_STYLES.sizes[size],\n      className\n    );\n\n    return (\n      <button\n        ref={ref}\n        className={buttonClassName}\n        disabled={isDisabled}\n        aria-label={ariaLabel}\n        aria-disabled={isDisabled}\n        onClick={(e) => {\n          if (isDisabled) { e.preventDefault(); e.stopPropagation(); return; }\n          props.onClick?.(e);\n        }}\n        {...props}\n      >\n        {loading && (\n          <Loader2 \n            className=\"w-4 h-4 mr-2 animate-spin\" \n            aria-hidden=\"true\"\n          />\n        )}\n        {loading && loadingText ? loadingText : children}\n      </button>\n    );\n  }\n);\n\nButton.displayName = 'Button';\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMA,0CAA0C;AAC1C,MAAM,gBAAgB;IACpB,MAAM;IACN,UAAU;QACR,SAAS;QACT,WAAW;QACX,SAAS;QACT,OAAO;QACP,aAAa;IACf;IACA,OAAO;QACL,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,MAAM;IACR;AACF;AAYO,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,OAC7B,CAAC,EACC,UAAU,SAAS,EACnB,OAAO,IAAI,EACX,UAAU,KAAK,EACf,WAAW,EACX,QAAQ,EACR,SAAS,EACT,QAAQ,EACR,cAAc,SAAS,EACvB,GAAG,OACJ,EAAE;IAED,MAAM,aAAa,YAAY;IAE/B,MAAM,kBAAkB,CAAA,GAAA,kIAAA,CAAA,KAAE,AAAD,EACvB,cAAc,IAAI,EAClB,cAAc,QAAQ,CAAC,QAAQ,EAC/B,cAAc,KAAK,CAAC,KAAK,EACzB;IAGF,qBACE,6LAAC;QACC,KAAK;QACL,WAAW;QACX,UAAU;QACV,cAAY;QACZ,iBAAe;QACf,SAAS,CAAC;YACR,IAAI,YAAY;gBAAE,EAAE,cAAc;gBAAI,EAAE,eAAe;gBAAI;YAAQ;YACnE,MAAM,OAAO,GAAG;QAClB;QACC,GAAG,KAAK;;YAER,yBACC,6LAAC,oNAAA,CAAA,UAAO;gBACN,WAAU;gBACV,eAAY;;;;;;YAGf,WAAW,cAAc,cAAc;;;;;;;AAG9C;;AAGF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/loop/loop/src/renderer/components/auth/LoginModal.tsx"],"sourcesContent":["\"use client\";\n\nimport React from 'react';\nimport { Button } from '../ui/Button';\n\nexport default function LoginModal({ open, onClose, onLogin }: { open: boolean; onClose: () => void; onLogin: () => Promise<void> }) {\n  if (!open) return null;\n\n  return (\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/50\">\n      <div\n        role=\"dialog\"\n        aria-modal=\"true\"\n        aria-label=\"Google 재로그인 필요\"\n        className=\"bg-white dark:bg-slate-800 rounded-lg shadow-lg p-6 w-full max-w-md mx-4\"\n      >\n        <h3 className=\"text-lg font-semibold mb-2 text-slate-900 dark:text-slate-100\">Google 재로그인 필요</h3>\n        <p className=\"mb-4 text-sm text-slate-600 dark:text-slate-400\">Google 인증이 만료되었거나 연결이 해제되었습니다. 계속하려면 다시 로그인해주세요.</p>\n\n        <div className=\"flex justify-end gap-2\">\n          <Button variant=\"ghost\" onClick={onClose}>취소</Button>\n          <Button onClick={async () => { await onLogin(); onClose(); }}>Google로 로그인</Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AAHA;;;AAKe,SAAS,WAAW,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAwE;IACjI,IAAI,CAAC,MAAM,OAAO;IAElB,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YACC,MAAK;YACL,cAAW;YACX,cAAW;YACX,WAAU;;8BAEV,6LAAC;oBAAG,WAAU;8BAAgE;;;;;;8BAC9E,6LAAC;oBAAE,WAAU;8BAAkD;;;;;;8BAE/D,6LAAC;oBAAI,WAAU;;sCACb,6LAAC,iJAAA,CAAA,SAAM;4BAAC,SAAQ;4BAAQ,SAAS;sCAAS;;;;;;sCAC1C,6LAAC,iJAAA,CAAA,SAAM;4BAAC,SAAS;gCAAc,MAAM;gCAAW;4BAAW;sCAAG;;;;;;;;;;;;;;;;;;;;;;;AAKxE;KArBwB","debugId":null}},
    {"offset": {"line": 235, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/loop/loop/src/renderer/contexts/AuthContext.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { createContext, useContext, useState, useEffect, useCallback, useMemo } from 'react';\nimport { Logger } from '../../shared/logger';\n\nexport interface AuthState {\n    isAuthenticated: boolean;\n    userEmail?: string;\n    userName?: string;\n    userPicture?: string;\n}\n\nexport interface AuthContextType {\n    auth: AuthState;\n    loadAuthStatus: () => Promise<void>;\n    setAuth: (next: Partial<AuthState>) => void;\n    clearAuth: () => void;\n}\n\n// Extended context type with loaded flag\nexport interface AuthContextTypeEx extends AuthContextType {\n    loaded: boolean;\n}\n\nconst getDefaultAuth = (): AuthState => ({ isAuthenticated: false });\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport function AuthProvider({ children, initialAuth }: { children: React.ReactNode; initialAuth?: any }) {\n    const [auth, setAuthState] = useState<AuthState>(() => {\n        if (initialAuth && initialAuth.isAuthenticated) {\n            return {\n                isAuthenticated: true,\n                userEmail: initialAuth.userEmail || undefined,\n                userName: initialAuth.userName || undefined,\n                userPicture: initialAuth.userPicture || undefined,\n            } as AuthState;\n        }\n        return getDefaultAuth();\n    });\n    const [loaded, setLoaded] = useState<boolean>(() => !!(initialAuth));\n    const [loginModalOpen, setLoginModalOpen] = useState<boolean>(false);\n    const latestLoadId = React.useRef(0);\n\n    const setAuth = useCallback((next: Partial<AuthState>) => {\n        setAuthState(prev => ({ ...prev, ...next }));\n    }, []);\n\n    const clearAuth = useCallback(() => {\n        setAuthState(getDefaultAuth());\n    }, []);\n\n    const loadAuthStatus = useCallback(async (): Promise<void> => {\n        const requestId = ++latestLoadId.current;\n        try {\n            if (typeof window === 'undefined' || !window.electronAPI?.oauth?.getAuthStatus) return;\n            const res = await window.electronAPI.oauth.getAuthStatus();\n            // ignore stale responses\n            if (requestId !== latestLoadId.current) return;\n\n            if (res && res.success && res.data && res.data.isAuthenticated) {\n                const email = res.data.userEmail;\n                const picture = res.data.userPicture || (email ? `https://ui-avatars.com/api/?name=${encodeURIComponent(email)}&background=4f46e5&color=fff&size=64` : undefined);\n                setAuthState({\n                    isAuthenticated: true,\n                    userEmail: email,\n                    userName: email ? email.split('@')[0] : res.data.userName || 'Google 사용자',\n                    userPicture: picture,\n                });\n                Logger.info('AUTH_CONTEXT', 'Auth status loaded', { userEmail: email });\n            } else {\n                setAuthState(getDefaultAuth());\n            }\n        } catch (error) {\n            // ignore stale errors\n            if (requestId !== latestLoadId.current) return;\n            Logger.error('AUTH_CONTEXT', 'Failed to load auth status', error);\n            setAuthState(getDefaultAuth());\n        }\n        finally {\n            // mark loaded regardless of result (so UI can update safely)\n            if (requestId === latestLoadId.current) setLoaded(true);\n        }\n    }, []);\n\n    useEffect(() => {\n        // seed auth state from preload async snapshot to reduce flicker\n        (async () => {\n            try {\n                // Try synchronous preload snapshot first to avoid waiting\n                if (typeof window !== 'undefined' && (window as any).loopSnapshot && typeof (window as any).loopSnapshot.get === 'function') {\n                    try {\n                        const snap = (window as any).loopSnapshot.get();\n                        if (snap && snap.auth && snap.auth.isAuthenticated) {\n                            setAuthState({\n                                isAuthenticated: true,\n                                userEmail: snap.auth.userEmail || undefined,\n                                userName: snap.auth.userName || undefined,\n                                userPicture: snap.auth.userPicture || undefined,\n                            });\n                            setLoaded(true);\n                        }\n                    } catch (e) {\n                        // ignore sync preload errors\n                    }\n                }\n\n                // fallback: async snapshot via electronAPI\n                if (typeof window !== 'undefined' && (window as any).electronAPI?.loopSnapshot?.getAsync) {\n                    const snap = await (window as any).electronAPI.loopSnapshot.getAsync();\n                    if (snap && snap.auth && snap.auth.isAuthenticated) {\n                        setAuthState({\n                            isAuthenticated: true,\n                            userEmail: snap.auth.userEmail || undefined,\n                            userName: snap.auth.userName || undefined,\n                            userPicture: snap.auth.userPicture || undefined,\n                        });\n                        setLoaded(true);\n                    }\n                }\n            } catch (e) {\n                // ignore\n            } finally {\n                // validate/refresh tokens after seeding\n                loadAuthStatus();\n            }\n        })();\n\n        if (typeof window !== 'undefined' && window.electronAPI?.on) {\n            const handler = (payload?: any) => {\n                Logger.info('AUTH_CONTEXT', 'auth-status-changed event received', payload);\n                // If the payload contains user data, update state immediately to improve UX\n                try {\n                    if (payload && payload.userEmail) {\n                        setAuthState((prev) => ({\n                            ...prev,\n                            isAuthenticated: true,\n                            userEmail: payload.userEmail || prev.userEmail,\n                            userName: payload.userName || prev.userName,\n                            userPicture: payload.userPicture || prev.userPicture,\n                        }));\n                        setLoaded(true);\n                        return;\n                    }\n                } catch (e) {\n                    // continue to fallback\n                }\n                loadAuthStatus();\n            };\n            window.electronAPI.on('auth-status-changed', handler);\n            window.electronAPI.on('oauth-success', handler);\n            const loginRequiredHandler = () => {\n                Logger.info('AUTH_CONTEXT', 'oauth:login-required received - clearing auth and notifying user');\n                clearAuth();\n                try {\n                    window.electronAPI.notifications.show('로그인 필요', 'Google 인증이 만료되었습니다. 다시 로그인해주세요.');\n                } catch (e) {\n                    // ignore\n                }\n                // open modal to prompt user\n                setLoginModalOpen(true);\n            };\n            window.electronAPI.on('oauth:login-required', loginRequiredHandler);\n            return () => {\n                window.electronAPI?.removeListener('auth-status-changed', handler);\n                window.electronAPI?.removeListener('oauth-success', handler);\n                window.electronAPI?.removeListener('oauth:login-required', loginRequiredHandler);\n            };\n        }\n    }, [loadAuthStatus]);\n\n    const ctx = useMemo(() => ({ auth, loadAuthStatus, setAuth, clearAuth, loaded }), [auth, loadAuthStatus, setAuth, clearAuth, loaded]);\n\n    // lazy load LoginModal to avoid SSR issues\n    const LoginModal = require('../components/auth/LoginModal').default;\n\n    return (\n        <AuthContext.Provider value={ctx as unknown as AuthContextType}>\n            {children}\n            <LoginModal open={loginModalOpen} onClose={() => setLoginModalOpen(false)} onLogin={async () => {\n                try {\n                    await window.electronAPI.oauth.startGoogleAuth();\n                } catch (e) {\n                    Logger.error('AUTH_CONTEXT', 'Failed to start google auth from modal', e);\n                }\n            }} />\n        </AuthContext.Provider>\n    );\n}\n\nexport function useAuth(): AuthContextType {\n    const ctx = useContext(AuthContext);\n    if (!ctx) throw new Error('useAuth must be used within AuthProvider');\n    return ctx;\n}\n\nexport default AuthContext;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 486, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/loop/loop/src/renderer/app/settings/hooks/useSettings.ts"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useCallback, useRef } from 'react';\nimport { Logger } from '../../../../shared/logger';\nimport type { SettingsData, UseSettingsReturn } from '../types';\n\n// 🔥 기가차드 useSettings 훅 - Electron-Store 완벽 호환!\n\n/**\n * 🔥 Settings 관리를 위한 커스텀 훅\n * - main/settings/ElectronStoreSettingsManager와 완벽 호환\n * - IPC 통신을 통한 설정 관리\n * - 타입 안전한 설정 업데이트\n * - 성능 최적화된 상태 관리\n */\nexport function useSettings(): UseSettingsReturn {\n  const [settings, setSettings] = useState<SettingsData | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [saving, setSaving] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // 🔥 중복 요청 방지를 위한 ref\n  const loadingRef = useRef<boolean>(false);\n  const savingRef = useRef<boolean>(false);\n\n  /**\n   * 🔥 CSS 변수 업데이트 함수 (폰트 설정)\n   */\n  const updateCSSVariables = useCallback(() => {\n    if (!settings) return;\n\n    const root = document.documentElement;\n    root.style.setProperty('--app-font-size', `${settings.app.fontSize}px`);\n    root.style.setProperty('--app-font-family', settings.app.fontFamily);\n\n    Logger.debug('USE_SETTINGS', 'CSS variables updated', {\n      fontSize: settings.app.fontSize,\n      fontFamily: settings.app.fontFamily\n    });\n  }, [settings]);\n\n  /**\n   * 🔥 기본값 정의 (main/settings와 동일)\n   */\n  const defaultSettings: SettingsData = {\n    app: {\n      theme: 'system',\n      language: 'ko',\n      autoSave: true,\n      startMinimized: false,\n      minimizeToTray: true,\n      fontSize: 14,\n      fontFamily: 'Pretendard, -apple-system, BlinkMacSystemFont, system-ui, sans-serif',\n    },\n    keyboard: {\n      enabled: true,\n      language: 'korean',\n      trackAllApps: false,\n      sessionTimeout: 30,\n    },\n    ui: {\n      windowWidth: 1400,\n      windowHeight: 900,\n      sidebarCollapsed: false,\n      focusMode: false,\n      showLineNumbers: true,\n      showWordCount: true,\n    },\n    performance: {\n      enableGPUAcceleration: true,\n      maxCPUUsage: 80,\n      maxMemoryUsage: 2048,\n      enableHardwareAcceleration: true,\n    },\n    account: {\n      userId: undefined,\n      username: undefined,\n      email: undefined,\n      displayName: undefined,\n      avatar: undefined,\n      enableSync: false,\n      syncProvider: 'local',\n      syncInterval: 60,\n      enableTwoFactor: false,\n      authProvider: 'local',\n      sessionTimeout: 60,\n    },\n    notifications: {\n      enableNotifications: true,\n      enableSounds: true,\n      notifyGoalAchieved: true,\n      notifyDailyGoal: true,\n      notifyErrors: true,\n    },\n  };\n\n  /**\n   * 🔥 설정 로드 (중복 방지)\n   */\n  const loadSettings = useCallback(async (): Promise<void> => {\n    if (loadingRef.current) return;\n\n    try {\n      loadingRef.current = true;\n      setLoading(true);\n      setError(null);\n\n      Logger.debug('USE_SETTINGS', 'Loading settings from main process');\n\n      const result = await window.electronAPI.settings.getAll();\n\n      if (result && result.success && result.data) {\n        // electron-store returns partial/full settings object; merge with defaults\n        const loaded = result.data as Partial<SettingsData>;\n        const merged: SettingsData = {\n          ...defaultSettings,\n          ...loaded,\n          app: { ...defaultSettings.app, ...(loaded.app || {}) },\n          keyboard: { ...defaultSettings.keyboard, ...(loaded.keyboard || {}) },\n          ui: { ...defaultSettings.ui, ...(loaded.ui || {}) },\n          performance: { ...defaultSettings.performance, ...(loaded.performance || {}) },\n          account: { ...defaultSettings.account, ...(loaded.account || {}) },\n          notifications: { ...defaultSettings.notifications, ...(loaded.notifications || {}) },\n        } as SettingsData;\n\n        setSettings(merged);\n\n        // 🔥 폰트 설정 CSS 변수 업데이트 (즉시 적용)\n        setTimeout(() => {\n          const root = document.documentElement;\n          root.style.setProperty('--app-font-size', `${merged.app.fontSize}px`);\n          root.style.setProperty('--app-font-family', merged.app.fontFamily);\n          Logger.debug('USE_SETTINGS', 'Initial CSS font variables applied', {\n            fontSize: merged.app.fontSize,\n            fontFamily: merged.app.fontFamily\n          });\n        }, 0);\n\n        Logger.info('USE_SETTINGS', 'Settings loaded successfully', result.data);\n      } else {\n        Logger.warn('USE_SETTINGS', 'Failed to load settings, using defaults', result?.error);\n        setSettings(defaultSettings);\n        setError('기본 설정을 사용합니다.');\n      }\n    } catch (error) {\n      Logger.error('USE_SETTINGS', 'Error loading settings', error);\n      setSettings(defaultSettings);\n      setError(error instanceof Error ? error.message : '설정 로드 중 오류가 발생했습니다.');\n    } finally {\n      setLoading(false);\n      loadingRef.current = false;\n    }\n  }, []);\n\n  /**\n   * 🔥 설정 업데이트 (타입 안전)\n   */\n  const updateSetting = useCallback(async <K extends keyof SettingsData, T extends keyof SettingsData[K]>(\n    category: K,\n    key: T,\n    value: SettingsData[K][T]\n  ): Promise<void> => {\n    if (!settings || savingRef.current) return;\n\n    try {\n      setSaving(true);\n      savingRef.current = true;\n\n      // 🔥 즉시 UI 업데이트 (낙관적 업데이트)\n      setSettings(prev => {\n        if (!prev) return null;\n\n        return {\n          ...prev,\n          [category]: {\n            ...prev[category],\n            [key]: value,\n          },\n        };\n      });\n\n      // 🔥 백엔드에 저장 (dot notation 사용)\n      const keyPath = `${category}.${String(key)}`;\n      Logger.debug('USE_SETTINGS', `Updating setting: ${keyPath}`, { value });\n\n      const result = await window.electronAPI.settings.set(keyPath, value);\n\n      if (result.success) {\n        Logger.info('USE_SETTINGS', `Setting updated successfully: ${keyPath}`, { value });\n\n        // 🔥 테마 설정의 경우 localStorage에도 즉시 저장 (백업)\n        if (category === 'app' && key === 'theme') {\n          try {\n            localStorage.setItem('loop-theme', value as string);\n            Logger.debug('USE_SETTINGS', 'Theme also saved to localStorage', { theme: value });\n          } catch (error) {\n            Logger.warn('USE_SETTINGS', 'Failed to save theme to localStorage', error);\n          }\n        }\n\n        // 🔥 폰트 설정이 변경되면 CSS 변수 즉시 업데이트 (새 값으로)\n        if (category === 'app' && (key === 'fontSize' || key === 'fontFamily')) {\n          const root = document.documentElement;\n          if (key === 'fontSize') {\n            root.style.setProperty('--app-font-size', `${value}px`);\n          } else if (key === 'fontFamily') {\n            root.style.setProperty('--app-font-family', value as string);\n          }\n          Logger.debug('USE_SETTINGS', 'CSS font variables updated immediately', {\n            key,\n            value\n          });\n        }\n      } else {\n        throw new Error(result.error || `Failed to save ${keyPath}`);\n      }\n    } catch (error) {\n      Logger.error('USE_SETTINGS', `Error updating setting: ${category}.${String(key)}`, error);\n\n      // 🔥 에러 시 롤백\n      await loadSettings();\n      setError(`설정 저장 실패: ${error instanceof Error ? error.message : '알 수 없는 오류'}`);\n    } finally {\n      setSaving(false);\n      savingRef.current = false;\n    }\n  }, [settings, loadSettings]);\n\n  /**\n   * 🔥 모든 설정 저장 - 명시적 카테고리 저장으로 강화\n   */\n  const saveAllSettings = useCallback(async (): Promise<void> => {\n    if (!settings || savingRef.current) return;\n\n    try {\n      savingRef.current = true;\n      setSaving(true);\n      setError(null);\n\n      Logger.info('USE_SETTINGS', 'Saving all settings...');\n\n      // 🔥 명시적으로 모든 카테고리 저장 (누락 방지)\n      const categories = ['app', 'keyboard', 'ui', 'performance', 'account', 'notifications'] as const;\n\n      for (const category of categories) {\n        const categoryData = settings[category];\n        if (categoryData) {\n          Logger.debug('USE_SETTINGS', `Saving category: ${category}`, categoryData);\n          const result = await window.electronAPI.settings.set(category, categoryData);\n          if (!result.success) {\n            throw new Error(`Failed to save ${category} settings: ${result.error}`);\n          }\n        }\n      }\n\n      Logger.info('USE_SETTINGS', 'All settings saved successfully');\n\n      // 저장 성공 메시지 표시 (선택적)\n      if (typeof window !== 'undefined' && window.electronAPI?.notifications?.show) {\n        try {\n          await window.electronAPI.notifications.show('설정 저장 완료', '모든 설정이 성공적으로 저장되었습니다.');\n        } catch (e) {\n          // 알림 실패는 무시\n        }\n      }\n\n    } catch (error) {\n      Logger.error('USE_SETTINGS', 'Failed to save all settings', error);\n      setError(`전체 설정 저장 실패: ${error instanceof Error ? error.message : '알 수 없는 오류'}`);\n    } finally {\n      setSaving(false);\n      savingRef.current = false;\n    }\n  }, [settings]);\n\n  /**\n   * 🔥 설정 리셋\n   */\n  const resetSettings = useCallback(async (): Promise<void> => {\n    if (savingRef.current) return;\n\n    try {\n      savingRef.current = true;\n      setSaving(true);\n      setError(null);\n\n      Logger.info('USE_SETTINGS', 'Resetting all settings...');\n\n      const result = await window.electronAPI.settings.reset();\n\n      if (result.success) {\n        // 🔥 성공 시 기본값으로 설정하고 다시 로드\n        setSettings(defaultSettings);\n        await loadSettings();\n        Logger.info('USE_SETTINGS', 'Settings reset successfully');\n      } else {\n        throw new Error(result.error || 'Failed to reset settings');\n      }\n    } catch (error) {\n      Logger.error('USE_SETTINGS', 'Failed to reset settings', error);\n      setError(`설정 초기화 실패: ${error instanceof Error ? error.message : '알 수 없는 오류'}`);\n    } finally {\n      setSaving(false);\n      savingRef.current = false;\n    }\n  }, [loadSettings]);\n\n  /**\n   * 🔥 초기 설정 로드\n   */\n  useEffect(() => {\n    loadSettings();\n  }, [loadSettings]);\n\n  // subscribe to main process broadcasts so UI updates immediately when settings change\n  useEffect(() => {\n    try {\n      const unsub = (window.electronAPI as any).settings.onDidChange?.((payload: { keyPath: string; value: unknown; reset?: boolean }) => {\n        if (!payload || !payload.keyPath) return;\n\n        // dot-path merge into settings (safe with type guards)\n        setSettings(prev => {\n          if (!prev) return prev;\n\n          const parts = payload.keyPath.split('.').filter(Boolean);\n          if (parts.length === 0) return prev;\n\n          if (parts.length === 1) {\n            const category = parts[0] as string;\n            return Object.assign({}, prev as any, { [(category as any)]: payload.value }) as SettingsData;\n          }\n\n          const cat = parts[0] as string;\n          const rest = parts.slice(1) as string[];\n          if (!cat) return prev;\n\n          const newCategory = Object.assign({}, (prev as any)[cat]) as Record<string, any>;\n          let target: Record<string, any> = newCategory || {};\n\n          for (let i = 0; i < rest.length - 1; i++) {\n            const k = rest[i];\n            if (!k) continue;\n            if (!(k in target)) target[k] = {};\n            target = target[k] as Record<string, any>;\n          }\n\n          const lastKey = rest[rest.length - 1];\n          if (lastKey) target[lastKey] = payload.value;\n\n          return Object.assign({}, prev as any, { [(cat as any)]: newCategory }) as SettingsData;\n        });\n      });\n\n      return () => { if (typeof unsub === 'function') unsub(); };\n    } catch (e) {\n      // ignore if API missing\n      return () => { };\n    }\n  }, []);\n\n  /**\n   * 🔥 에러 자동 클리어 (10초 후)\n   */\n  useEffect(() => {\n    if (error) {\n      const timer = setTimeout(() => {\n        setError(null);\n      }, 10000);\n\n      return () => clearTimeout(timer);\n    }\n  }, [error]);\n\n  return {\n    settings,\n    loading,\n    saving,\n    error,\n    updateSetting,\n    saveAllSettings,\n    resetSettings,\n    setSettings,\n  };\n}\n"],"names":[],"mappings":";;;AAEA;;;;;;;AAFA;;;AAeO,SAAS;;IACd,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAuB;IAC9D,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IAChD,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IAC9C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,sBAAsB;IACtB,MAAM,aAAa,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAW;IACnC,MAAM,YAAY,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAW;IAElC;;GAEC,GACD,MAAM,qBAAqB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;uDAAE;YACrC,IAAI,CAAC,UAAU;YAEf,MAAM,OAAO,SAAS,eAAe;YACrC,KAAK,KAAK,CAAC,WAAW,CAAC,mBAAmB,GAAG,SAAS,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC;YACtE,KAAK,KAAK,CAAC,WAAW,CAAC,qBAAqB,SAAS,GAAG,CAAC,UAAU;YAEnE,OAAO,KAAK,CAAC,gBAAgB,yBAAyB;gBACpD,UAAU,SAAS,GAAG,CAAC,QAAQ;gBAC/B,YAAY,SAAS,GAAG,CAAC,UAAU;YACrC;QACF;sDAAG;QAAC;KAAS;IAEb;;GAEC,GACD,MAAM,kBAAgC;QACpC,KAAK;YACH,OAAO;YACP,UAAU;YACV,UAAU;YACV,gBAAgB;YAChB,gBAAgB;YAChB,UAAU;YACV,YAAY;QACd;QACA,UAAU;YACR,SAAS;YACT,UAAU;YACV,cAAc;YACd,gBAAgB;QAClB;QACA,IAAI;YACF,aAAa;YACb,cAAc;YACd,kBAAkB;YAClB,WAAW;YACX,iBAAiB;YACjB,eAAe;QACjB;QACA,aAAa;YACX,uBAAuB;YACvB,aAAa;YACb,gBAAgB;YAChB,4BAA4B;QAC9B;QACA,SAAS;YACP,QAAQ;YACR,UAAU;YACV,OAAO;YACP,aAAa;YACb,QAAQ;YACR,YAAY;YACZ,cAAc;YACd,cAAc;YACd,iBAAiB;YACjB,cAAc;YACd,gBAAgB;QAClB;QACA,eAAe;YACb,qBAAqB;YACrB,cAAc;YACd,oBAAoB;YACpB,iBAAiB;YACjB,cAAc;QAChB;IACF;IAEA;;GAEC,GACD,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;iDAAE;YAC/B,IAAI,WAAW,OAAO,EAAE;YAExB,IAAI;gBACF,WAAW,OAAO,GAAG;gBACrB,WAAW;gBACX,SAAS;gBAET,OAAO,KAAK,CAAC,gBAAgB;gBAE7B,MAAM,SAAS,MAAM,OAAO,WAAW,CAAC,QAAQ,CAAC,MAAM;gBAEvD,IAAI,UAAU,OAAO,OAAO,IAAI,OAAO,IAAI,EAAE;oBAC3C,2EAA2E;oBAC3E,MAAM,SAAS,OAAO,IAAI;oBAC1B,MAAM,SAAuB;wBAC3B,GAAG,eAAe;wBAClB,GAAG,MAAM;wBACT,KAAK;4BAAE,GAAG,gBAAgB,GAAG;4BAAE,GAAI,OAAO,GAAG,IAAI,CAAC,CAAC;wBAAE;wBACrD,UAAU;4BAAE,GAAG,gBAAgB,QAAQ;4BAAE,GAAI,OAAO,QAAQ,IAAI,CAAC,CAAC;wBAAE;wBACpE,IAAI;4BAAE,GAAG,gBAAgB,EAAE;4BAAE,GAAI,OAAO,EAAE,IAAI,CAAC,CAAC;wBAAE;wBAClD,aAAa;4BAAE,GAAG,gBAAgB,WAAW;4BAAE,GAAI,OAAO,WAAW,IAAI,CAAC,CAAC;wBAAE;wBAC7E,SAAS;4BAAE,GAAG,gBAAgB,OAAO;4BAAE,GAAI,OAAO,OAAO,IAAI,CAAC,CAAC;wBAAE;wBACjE,eAAe;4BAAE,GAAG,gBAAgB,aAAa;4BAAE,GAAI,OAAO,aAAa,IAAI,CAAC,CAAC;wBAAE;oBACrF;oBAEA,YAAY;oBAEZ,+BAA+B;oBAC/B;iEAAW;4BACT,MAAM,OAAO,SAAS,eAAe;4BACrC,KAAK,KAAK,CAAC,WAAW,CAAC,mBAAmB,GAAG,OAAO,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC;4BACpE,KAAK,KAAK,CAAC,WAAW,CAAC,qBAAqB,OAAO,GAAG,CAAC,UAAU;4BACjE,OAAO,KAAK,CAAC,gBAAgB,sCAAsC;gCACjE,UAAU,OAAO,GAAG,CAAC,QAAQ;gCAC7B,YAAY,OAAO,GAAG,CAAC,UAAU;4BACnC;wBACF;gEAAG;oBAEH,OAAO,IAAI,CAAC,gBAAgB,gCAAgC,OAAO,IAAI;gBACzE,OAAO;oBACL,OAAO,IAAI,CAAC,gBAAgB,2CAA2C,QAAQ;oBAC/E,YAAY;oBACZ,SAAS;gBACX;YACF,EAAE,OAAO,OAAO;gBACd,OAAO,KAAK,CAAC,gBAAgB,0BAA0B;gBACvD,YAAY;gBACZ,SAAS,iBAAiB,QAAQ,MAAM,OAAO,GAAG;YACpD,SAAU;gBACR,WAAW;gBACX,WAAW,OAAO,GAAG;YACvB;QACF;gDAAG,EAAE;IAEL;;GAEC,GACD,MAAM,gBAAgB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;kDAAE,OAChC,UACA,KACA;YAEA,IAAI,CAAC,YAAY,UAAU,OAAO,EAAE;YAEpC,IAAI;gBACF,UAAU;gBACV,UAAU,OAAO,GAAG;gBAEpB,2BAA2B;gBAC3B;8DAAY,CAAA;wBACV,IAAI,CAAC,MAAM,OAAO;wBAElB,OAAO;4BACL,GAAG,IAAI;4BACP,CAAC,SAAS,EAAE;gCACV,GAAG,IAAI,CAAC,SAAS;gCACjB,CAAC,IAAI,EAAE;4BACT;wBACF;oBACF;;gBAEA,+BAA+B;gBAC/B,MAAM,UAAU,GAAG,SAAS,CAAC,EAAE,OAAO,MAAM;gBAC5C,OAAO,KAAK,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,SAAS,EAAE;oBAAE;gBAAM;gBAErE,MAAM,SAAS,MAAM,OAAO,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS;gBAE9D,IAAI,OAAO,OAAO,EAAE;oBAClB,OAAO,IAAI,CAAC,gBAAgB,CAAC,8BAA8B,EAAE,SAAS,EAAE;wBAAE;oBAAM;oBAEhF,yCAAyC;oBACzC,IAAI,aAAa,SAAS,QAAQ,SAAS;wBACzC,IAAI;4BACF,aAAa,OAAO,CAAC,cAAc;4BACnC,OAAO,KAAK,CAAC,gBAAgB,oCAAoC;gCAAE,OAAO;4BAAM;wBAClF,EAAE,OAAO,OAAO;4BACd,OAAO,IAAI,CAAC,gBAAgB,wCAAwC;wBACtE;oBACF;oBAEA,wCAAwC;oBACxC,IAAI,aAAa,SAAS,CAAC,QAAQ,cAAc,QAAQ,YAAY,GAAG;wBACtE,MAAM,OAAO,SAAS,eAAe;wBACrC,IAAI,QAAQ,YAAY;4BACtB,KAAK,KAAK,CAAC,WAAW,CAAC,mBAAmB,GAAG,MAAM,EAAE,CAAC;wBACxD,OAAO,IAAI,QAAQ,cAAc;4BAC/B,KAAK,KAAK,CAAC,WAAW,CAAC,qBAAqB;wBAC9C;wBACA,OAAO,KAAK,CAAC,gBAAgB,0CAA0C;4BACrE;4BACA;wBACF;oBACF;gBACF,OAAO;oBACL,MAAM,IAAI,MAAM,OAAO,KAAK,IAAI,CAAC,eAAe,EAAE,SAAS;gBAC7D;YACF,EAAE,OAAO,OAAO;gBACd,OAAO,KAAK,CAAC,gBAAgB,CAAC,wBAAwB,EAAE,SAAS,CAAC,EAAE,OAAO,MAAM,EAAE;gBAEnF,aAAa;gBACb,MAAM;gBACN,SAAS,CAAC,UAAU,EAAE,iBAAiB,QAAQ,MAAM,OAAO,GAAG,aAAa;YAC9E,SAAU;gBACR,UAAU;gBACV,UAAU,OAAO,GAAG;YACtB;QACF;iDAAG;QAAC;QAAU;KAAa;IAE3B;;GAEC,GACD,MAAM,kBAAkB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;oDAAE;YAClC,IAAI,CAAC,YAAY,UAAU,OAAO,EAAE;YAEpC,IAAI;gBACF,UAAU,OAAO,GAAG;gBACpB,UAAU;gBACV,SAAS;gBAET,OAAO,IAAI,CAAC,gBAAgB;gBAE5B,8BAA8B;gBAC9B,MAAM,aAAa;oBAAC;oBAAO;oBAAY;oBAAM;oBAAe;oBAAW;iBAAgB;gBAEvF,KAAK,MAAM,YAAY,WAAY;oBACjC,MAAM,eAAe,QAAQ,CAAC,SAAS;oBACvC,IAAI,cAAc;wBAChB,OAAO,KAAK,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,UAAU,EAAE;wBAC7D,MAAM,SAAS,MAAM,OAAO,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU;wBAC/D,IAAI,CAAC,OAAO,OAAO,EAAE;4BACnB,MAAM,IAAI,MAAM,CAAC,eAAe,EAAE,SAAS,WAAW,EAAE,OAAO,KAAK,EAAE;wBACxE;oBACF;gBACF;gBAEA,OAAO,IAAI,CAAC,gBAAgB;gBAE5B,qBAAqB;gBACrB,IAAI,aAAkB,eAAe,OAAO,WAAW,EAAE,eAAe,MAAM;oBAC5E,IAAI;wBACF,MAAM,OAAO,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY;oBAC1D,EAAE,OAAO,GAAG;oBACV,YAAY;oBACd;gBACF;YAEF,EAAE,OAAO,OAAO;gBACd,OAAO,KAAK,CAAC,gBAAgB,+BAA+B;gBAC5D,SAAS,CAAC,aAAa,EAAE,iBAAiB,QAAQ,MAAM,OAAO,GAAG,aAAa;YACjF,SAAU;gBACR,UAAU;gBACV,UAAU,OAAO,GAAG;YACtB;QACF;mDAAG;QAAC;KAAS;IAEb;;GAEC,GACD,MAAM,gBAAgB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;kDAAE;YAChC,IAAI,UAAU,OAAO,EAAE;YAEvB,IAAI;gBACF,UAAU,OAAO,GAAG;gBACpB,UAAU;gBACV,SAAS;gBAET,OAAO,IAAI,CAAC,gBAAgB;gBAE5B,MAAM,SAAS,MAAM,OAAO,WAAW,CAAC,QAAQ,CAAC,KAAK;gBAEtD,IAAI,OAAO,OAAO,EAAE;oBAClB,2BAA2B;oBAC3B,YAAY;oBACZ,MAAM;oBACN,OAAO,IAAI,CAAC,gBAAgB;gBAC9B,OAAO;oBACL,MAAM,IAAI,MAAM,OAAO,KAAK,IAAI;gBAClC;YACF,EAAE,OAAO,OAAO;gBACd,OAAO,KAAK,CAAC,gBAAgB,4BAA4B;gBACzD,SAAS,CAAC,WAAW,EAAE,iBAAiB,QAAQ,MAAM,OAAO,GAAG,aAAa;YAC/E,SAAU;gBACR,UAAU;gBACV,UAAU,OAAO,GAAG;YACtB;QACF;iDAAG;QAAC;KAAa;IAEjB;;GAEC,GACD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;iCAAE;YACR;QACF;gCAAG;QAAC;KAAa;IAEjB,sFAAsF;IACtF,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;iCAAE;YACR,IAAI;gBACF,MAAM,QAAQ,AAAC,OAAO,WAAW,CAAS,QAAQ,CAAC,WAAW;6CAAG,CAAC;wBAChE,IAAI,CAAC,WAAW,CAAC,QAAQ,OAAO,EAAE;wBAElC,uDAAuD;wBACvD;qDAAY,CAAA;gCACV,IAAI,CAAC,MAAM,OAAO;gCAElB,MAAM,QAAQ,QAAQ,OAAO,CAAC,KAAK,CAAC,KAAK,MAAM,CAAC;gCAChD,IAAI,MAAM,MAAM,KAAK,GAAG,OAAO;gCAE/B,IAAI,MAAM,MAAM,KAAK,GAAG;oCACtB,MAAM,WAAW,KAAK,CAAC,EAAE;oCACzB,OAAO,OAAO,MAAM,CAAC,CAAC,GAAG,MAAa;wCAAE,CAAE,SAAiB,EAAE,QAAQ,KAAK;oCAAC;gCAC7E;gCAEA,MAAM,MAAM,KAAK,CAAC,EAAE;gCACpB,MAAM,OAAO,MAAM,KAAK,CAAC;gCACzB,IAAI,CAAC,KAAK,OAAO;gCAEjB,MAAM,cAAc,OAAO,MAAM,CAAC,CAAC,GAAG,AAAC,IAAY,CAAC,IAAI;gCACxD,IAAI,SAA8B,eAAe,CAAC;gCAElD,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,MAAM,GAAG,GAAG,IAAK;oCACxC,MAAM,IAAI,IAAI,CAAC,EAAE;oCACjB,IAAI,CAAC,GAAG;oCACR,IAAI,CAAC,CAAC,KAAK,MAAM,GAAG,MAAM,CAAC,EAAE,GAAG,CAAC;oCACjC,SAAS,MAAM,CAAC,EAAE;gCACpB;gCAEA,MAAM,UAAU,IAAI,CAAC,KAAK,MAAM,GAAG,EAAE;gCACrC,IAAI,SAAS,MAAM,CAAC,QAAQ,GAAG,QAAQ,KAAK;gCAE5C,OAAO,OAAO,MAAM,CAAC,CAAC,GAAG,MAAa;oCAAE,CAAE,IAAY,EAAE;gCAAY;4BACtE;;oBACF;;gBAEA;6CAAO;wBAAQ,IAAI,OAAO,UAAU,YAAY;oBAAS;;YAC3D,EAAE,OAAO,GAAG;gBACV,wBAAwB;gBACxB;6CAAO,KAAQ;;YACjB;QACF;gCAAG,EAAE;IAEL;;GAEC,GACD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;iCAAE;YACR,IAAI,OAAO;gBACT,MAAM,QAAQ;mDAAW;wBACvB,SAAS;oBACX;kDAAG;gBAEH;6CAAO,IAAM,aAAa;;YAC5B;QACF;gCAAG;QAAC;KAAM;IAEV,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;QACA;QACA;IACF;AACF;GAhXgB","debugId":null}},
    {"offset": {"line": 899, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/loop/loop/src/renderer/components/ui/Avatar.tsx"],"sourcesContent":["'use client';\n\nimport { ReactNode, forwardRef, useState } from 'react';\nimport { User } from 'lucide-react';\nimport { Logger } from '../../../shared/logger';\n\n// 🔥 기가차드 규칙: 프리컴파일된 스타일 상수\nconst AVATAR_STYLES = {\n  root: 'relative inline-flex items-center justify-center overflow-hidden rounded-full select-none',\n  sizes: {\n    sm: 'h-8 w-8 text-xs',\n    md: 'h-10 w-10 text-sm',\n    lg: 'h-12 w-12 text-base',\n    xl: 'h-16 w-16 text-lg',\n  },\n  image: 'aspect-square h-full w-full object-cover object-center',\n  fallback: 'flex h-full w-full items-center justify-center bg-slate-100 text-slate-600 font-medium',\n  icon: 'h-1/2 w-1/2 text-slate-400',\n  status: {\n    base: 'absolute bottom-0 right-0 rounded-full border-2 border-white',\n    sizes: {\n      sm: 'h-2 w-2',\n      md: 'h-2.5 w-2.5',\n      lg: 'h-3 w-3',\n      xl: 'h-4 w-4',\n    },\n    variants: {\n      online: 'bg-green-500',\n      away: 'bg-yellow-500',\n      busy: 'bg-red-500',\n      offline: 'bg-slate-400',\n    },\n  },\n} as const;\n\n// 🔥 기가차드 규칙: 명시적 타입 정의\nexport interface AvatarProps {\n  readonly size?: keyof typeof AVATAR_STYLES.sizes;\n  readonly src?: string;\n  readonly alt?: string;\n  readonly fallback?: string;\n  readonly status?: keyof typeof AVATAR_STYLES.status.variants;\n  readonly className?: string;\n  readonly children?: ReactNode;\n  readonly onClick?: () => void;\n  readonly 'aria-label'?: string;\n}\n\nexport interface AvatarImageProps {\n  readonly src: string;\n  readonly alt: string;\n  readonly className?: string;\n  readonly onLoadingStatusChange?: (loading: boolean) => void;\n}\n\nexport interface AvatarFallbackProps {\n  readonly className?: string;\n  readonly children: ReactNode;\n}\n\nfunction cn(...classes: (string | undefined | false)[]): string {\n  return classes.filter(Boolean).join(' ');\n}\n\nexport const Avatar = forwardRef<HTMLDivElement, AvatarProps>(\n  ({\n    size = 'md',\n    src,\n    alt,\n    fallback,\n    status,\n    className,\n    children,\n    onClick,\n    'aria-label': ariaLabel,\n    ...props\n  }, ref) => {\n\n    const [imageLoaded, setImageLoaded] = useState<boolean>(false);\n    const [imageError, setImageError] = useState<boolean>(false);\n\n    const avatarClassName = cn(\n      AVATAR_STYLES.root,\n      AVATAR_STYLES.sizes[size],\n      onClick && 'cursor-pointer hover:opacity-80 transition-opacity',\n      className\n    );\n\n    const handleClick = (): void => {\n      if (!onClick) return;\n\n      Logger.info('AVATAR', 'Avatar clicked', { size, hasImage: !!src });\n      onClick();\n    };\n\n    const handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>): void => {\n      if (!onClick) return;\n\n      if (event.key === 'Enter' || event.key === ' ') {\n        event.preventDefault();\n        handleClick();\n      }\n    };\n\n    const showImage = src && !imageError && imageLoaded;\n    const showFallback = !src || imageError || !imageLoaded;\n\n    return (\n      <div\n        ref={ref}\n        className={avatarClassName}\n        onClick={onClick ? handleClick : undefined}\n        onKeyDown={onClick ? handleKeyDown : undefined}\n        role={onClick ? 'button' : undefined}\n        tabIndex={onClick ? 0 : undefined}\n        aria-label={ariaLabel || alt}\n        {...props}\n      >\n        {/* 이미지 */}\n        {src && (\n          <img\n            src={src}\n            alt={alt || '사용자 아바타'}\n            className={cn(\n              AVATAR_STYLES.image,\n              showImage ? 'opacity-100' : 'opacity-0'\n            )}\n            onLoad={() => {\n              setImageLoaded(true);\n              setImageError(false);\n            }}\n            onError={() => {\n              setImageError(true);\n              setImageLoaded(false);\n            }}\n          />\n        )}\n\n        {/* 폴백 */}\n        {showFallback && (\n          <div className={AVATAR_STYLES.fallback}>\n            {children || fallback ? (\n              children || fallback\n            ) : (\n              <User className={AVATAR_STYLES.icon} aria-hidden=\"true\" />\n            )}\n          </div>\n        )}\n\n        {/* 상태 표시 */}\n        {status && (\n          <span\n            className={cn(\n              AVATAR_STYLES.status.base,\n              AVATAR_STYLES.status.sizes[size],\n              AVATAR_STYLES.status.variants[status]\n            )}\n            aria-label={`상태: ${status}`}\n          />\n        )}\n      </div>\n    );\n  }\n);\n\nAvatar.displayName = 'Avatar';\n\nexport const AvatarImage = forwardRef<HTMLImageElement, AvatarImageProps>(\n  ({ src, alt, className, onLoadingStatusChange, ...props }, ref) => {\n\n    const handleLoad = (): void => {\n      onLoadingStatusChange?.(false);\n    };\n\n    const handleError = (): void => {\n      onLoadingStatusChange?.(false);\n    };\n\n    return (\n      <img\n        ref={ref}\n        src={src}\n        alt={alt}\n        className={cn(AVATAR_STYLES.image, className)}\n        onLoad={handleLoad}\n        onError={handleError}\n        {...props}\n      />\n    );\n  }\n);\n\nAvatarImage.displayName = 'AvatarImage';\n\nexport const AvatarFallback = forwardRef<HTMLDivElement, AvatarFallbackProps>(\n  ({ className, children, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={cn(AVATAR_STYLES.fallback, className)}\n        {...props}\n      >\n        {children || <User className={AVATAR_STYLES.icon} aria-hidden=\"true\" />}\n      </div>\n    );\n  }\n);\n\nAvatarFallback.displayName = 'AvatarFallback';\n"],"names":[],"mappings":";;;;;;AAEA;AACA;;;;;;;;AAHA;;;;AAMA,4BAA4B;AAC5B,MAAM,gBAAgB;IACpB,MAAM;IACN,OAAO;QACL,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;IACN;IACA,OAAO;IACP,UAAU;IACV,MAAM;IACN,QAAQ;QACN,MAAM;QACN,OAAO;YACL,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,IAAI;QACN;QACA,UAAU;YACR,QAAQ;YACR,MAAM;YACN,MAAM;YACN,SAAS;QACX;IACF;AACF;AA2BA,SAAS,GAAG,GAAG,OAAuC;IACpD,OAAO,QAAQ,MAAM,CAAC,SAAS,IAAI,CAAC;AACtC;AAEO,MAAM,uBAAS,GAAA,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,UAC7B,CAAC,EACC,OAAO,IAAI,EACX,GAAG,EACH,GAAG,EACH,QAAQ,EACR,MAAM,EACN,SAAS,EACT,QAAQ,EACR,OAAO,EACP,cAAc,SAAS,EACvB,GAAG,OACJ,EAAE;;IAED,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IACxD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IAEtD,MAAM,kBAAkB,GACtB,cAAc,IAAI,EAClB,cAAc,KAAK,CAAC,KAAK,EACzB,WAAW,sDACX;IAGF,MAAM,cAAc;QAClB,IAAI,CAAC,SAAS;QAEd,OAAO,IAAI,CAAC,UAAU,kBAAkB;YAAE;YAAM,UAAU,CAAC,CAAC;QAAI;QAChE;IACF;IAEA,MAAM,gBAAgB,CAAC;QACrB,IAAI,CAAC,SAAS;QAEd,IAAI,MAAM,GAAG,KAAK,WAAW,MAAM,GAAG,KAAK,KAAK;YAC9C,MAAM,cAAc;YACpB;QACF;IACF;IAEA,MAAM,YAAY,OAAO,CAAC,cAAc;IACxC,MAAM,eAAe,CAAC,OAAO,cAAc,CAAC;IAE5C,qBACE,6LAAC;QACC,KAAK;QACL,WAAW;QACX,SAAS,UAAU,cAAc;QACjC,WAAW,UAAU,gBAAgB;QACrC,MAAM,UAAU,WAAW;QAC3B,UAAU,UAAU,IAAI;QACxB,cAAY,aAAa;QACxB,GAAG,KAAK;;YAGR,qBACC,6LAAC;gBACC,KAAK;gBACL,KAAK,OAAO;gBACZ,WAAW,GACT,cAAc,KAAK,EACnB,YAAY,gBAAgB;gBAE9B,QAAQ;oBACN,eAAe;oBACf,cAAc;gBAChB;gBACA,SAAS;oBACP,cAAc;oBACd,eAAe;gBACjB;;;;;;YAKH,8BACC,6LAAC;gBAAI,WAAW,cAAc,QAAQ;0BACnC,YAAY,WACX,YAAY,yBAEZ,6LAAC,qMAAA,CAAA,OAAI;oBAAC,WAAW,cAAc,IAAI;oBAAE,eAAY;;;;;;;;;;;YAMtD,wBACC,6LAAC;gBACC,WAAW,GACT,cAAc,MAAM,CAAC,IAAI,EACzB,cAAc,MAAM,CAAC,KAAK,CAAC,KAAK,EAChC,cAAc,MAAM,CAAC,QAAQ,CAAC,OAAO;gBAEvC,cAAY,CAAC,IAAI,EAAE,QAAQ;;;;;;;;;;;;AAKrC;;AAGF,OAAO,WAAW,GAAG;AAEd,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,QAClC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,SAAS,EAAE,qBAAqB,EAAE,GAAG,OAAO,EAAE;IAEzD,MAAM,aAAa;QACjB,wBAAwB;IAC1B;IAEA,MAAM,cAAc;QAClB,wBAAwB;IAC1B;IAEA,qBACE,6LAAC;QACC,KAAK;QACL,KAAK;QACL,KAAK;QACL,WAAW,GAAG,cAAc,KAAK,EAAE;QACnC,QAAQ;QACR,SAAS;QACR,GAAG,KAAK;;;;;;AAGf;;AAGF,YAAY,WAAW,GAAG;AAEnB,MAAM,+BAAiB,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,QACrC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE;IAClC,qBACE,6LAAC;QACC,KAAK;QACL,WAAW,GAAG,cAAc,QAAQ,EAAE;QACrC,GAAG,KAAK;kBAER,0BAAY,6LAAC,qMAAA,CAAA,OAAI;YAAC,WAAW,cAAc,IAAI;YAAE,eAAY;;;;;;;;;;;AAGpE;;AAGF,eAAe,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1090, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/loop/loop/src/renderer/components/ui/Tooltip.tsx"],"sourcesContent":["'use client';\n\nimport React, { ReactNode, useState, useRef, useEffect, cloneElement, isValidElement } from 'react';\nimport { Logger } from '../../../shared/logger';\n\n// 🔥 기가차드 규칙: 프리컴파일된 스타일 상수\nconst TOOLTIP_STYLES = {\n  trigger: 'inline-block relative',\n  tooltip: 'absolute z-50 px-3 py-2 text-xs font-medium text-white bg-slate-900 rounded-md shadow-lg whitespace-nowrap pointer-events-none transition-opacity duration-200',\n  arrow: 'absolute w-2 h-2 bg-slate-900 transform rotate-45',\n  positions: {\n    top: {\n      tooltip: 'bottom-full left-1/2 transform -translate-x-1/2 mb-3', // 마진 증가 (2 → 3)\n      arrow: 'top-full left-1/2 transform -translate-x-1/2 -translate-y-1/2',\n    },\n    bottom: {\n      tooltip: 'top-full left-1/2 transform -translate-x-1/2 mt-3', // 마진 증가 (2 → 3)\n      arrow: 'bottom-full left-1/2 transform -translate-x-1/2 translate-y-1/2',\n    },\n    left: {\n      tooltip: 'right-full top-1/2 transform -translate-y-1/2 mr-3', // 마진 증가 (2 → 3)\n      arrow: 'left-full top-1/2 transform -translate-y-1/2 -translate-x-1/2',\n    },\n    right: {\n      tooltip: 'left-full top-1/2 transform -translate-y-1/2 ml-3', // 마진 증가 (2 → 3)\n      arrow: 'right-full top-1/2 transform -translate-y-1/2 translate-x-1/2',\n    },\n  },\n  variants: {\n    default: 'bg-slate-900 text-white',\n    light: 'bg-white text-slate-900 border border-slate-200 shadow-md',\n    error: 'bg-red-600 text-white',\n    success: 'bg-green-600 text-white',\n    warning: 'bg-yellow-600 text-white',\n  },\n} as const;\n\n// 🔥 기가차드 규칙: 명시적 타입 정의\nexport interface TooltipProps {\n  readonly content: ReactNode;\n  readonly children: ReactNode;\n  readonly side?: keyof typeof TOOLTIP_STYLES.positions;\n  readonly variant?: keyof typeof TOOLTIP_STYLES.variants;\n  readonly delay?: number;\n  readonly disabled?: boolean;\n  readonly showArrow?: boolean;\n  readonly trigger?: 'hover' | 'click' | 'focus' | 'manual';\n  readonly open?: boolean;\n  readonly onOpenChange?: (open: boolean) => void;\n  readonly className?: string;\n  readonly sideOffset?: number;\n}\n\nfunction cn(...classes: (string | undefined | false | null)[]): string {\n  return classes.filter(Boolean).join(' ');\n}\n\nexport function Tooltip({\n  content,\n  children,\n  side = 'top',\n  variant = 'default',\n  delay = 200,\n  disabled = false,\n  showArrow = true,\n  trigger = 'hover',\n  open: controlledOpen,\n  onOpenChange,\n  className,\n  sideOffset = 0,\n}: TooltipProps): React.ReactElement {\n  const [internalOpen, setInternalOpen] = useState<boolean>(false);\n  const [mounted, setMounted] = useState<boolean>(false);\n  const triggerRef = useRef<HTMLElement>(null);\n  const tooltipRef = useRef<HTMLDivElement>(null);\n  const timeoutRef = useRef<NodeJS.Timeout | null>(null);\n\n  const isOpen = controlledOpen !== undefined ? controlledOpen : internalOpen;\n  const isControlled = controlledOpen !== undefined;\n\n  useEffect(() => {\n    setMounted(true);\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, []);\n\n  const setOpen = (open: boolean): void => {\n    if (disabled) return;\n\n    if (isControlled) {\n      onOpenChange?.(open);\n    } else {\n      setInternalOpen(open);\n    }\n\n    Logger.debug('TOOLTIP', `Tooltip ${open ? 'opened' : 'closed'}`, { side, trigger });\n  };\n\n  const showTooltip = (): void => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    timeoutRef.current = setTimeout(() => {\n      setOpen(true);\n    }, delay);\n  };\n\n  const hideTooltip = (): void => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    setOpen(false);\n  };\n\n  const handleMouseEnter = (): void => {\n    if (trigger === 'hover') {\n      showTooltip();\n    }\n  };\n\n  const handleMouseLeave = (): void => {\n    if (trigger === 'hover') {\n      hideTooltip();\n    }\n  };\n\n  const handleClick = (): void => {\n    if (trigger === 'click') {\n      setOpen(!isOpen);\n    }\n  };\n\n  const handleFocus = (): void => {\n    if (trigger === 'focus') {\n      showTooltip();\n    }\n  };\n\n  const handleBlur = (): void => {\n    if (trigger === 'focus') {\n      hideTooltip();\n    }\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent): void => {\n    if (event.key === 'Escape' && isOpen) {\n      hideTooltip();\n    }\n  };\n\n  // children에 이벤트 핸들러 추가\n  const triggerElement = isValidElement(children) \n    ? (() => {\n        const child = children as React.ReactElement<Record<string, unknown>>;\n        const childProps = (child.props || {}) as Record<string, unknown>;\n        return cloneElement(child as React.ReactElement<any>, {\n          onMouseEnter: (e: React.MouseEvent) => { (childProps.onMouseEnter as ((e: React.MouseEvent)=>void) | undefined)?.(e); handleMouseEnter(); },\n          onMouseLeave: (e: React.MouseEvent) => { (childProps.onMouseLeave as ((e: React.MouseEvent)=>void) | undefined)?.(e); handleMouseLeave(); },\n          onClick: (e: React.MouseEvent) => { (childProps.onClick as ((e: React.MouseEvent)=>void) | undefined)?.(e); handleClick(); },\n          onFocus: (e: React.FocusEvent) => { (childProps.onFocus as ((e: React.FocusEvent)=>void) | undefined)?.(e); handleFocus(); },\n          onBlur: (e: React.FocusEvent) => { (childProps.onBlur as ((e: React.FocusEvent)=>void) | undefined)?.(e); handleBlur(); },\n          onKeyDown: (e: React.KeyboardEvent) => { (childProps.onKeyDown as ((e: React.KeyboardEvent)=>void) | undefined)?.(e); handleKeyDown(e); },\n          'aria-describedby': isOpen ? 'tooltip' : undefined,\n        });\n      })()\n    : children;\n\n  // Tooltip 스타일 계산\n  const tooltipClassName = cn(\n    TOOLTIP_STYLES.tooltip,\n    TOOLTIP_STYLES.positions[side].tooltip,\n    TOOLTIP_STYLES.variants[variant],\n    isOpen ? 'opacity-100' : 'opacity-0 pointer-events-none',\n    className\n  );\n\n  const arrowClassName = cn(\n    TOOLTIP_STYLES.arrow,\n    TOOLTIP_STYLES.positions[side].arrow,\n    variant === 'light' ? 'bg-white border-l border-t border-slate-200' : 'bg-slate-900'\n  );\n\n  if (!mounted) {\n    return <div className={TOOLTIP_STYLES.trigger}>{children}</div>;\n  }\n\n  return (\n    <div className={TOOLTIP_STYLES.trigger}>\n      {triggerElement}\n      {isOpen && content && (\n        <div\n          ref={tooltipRef}\n          id=\"tooltip\"\n          role=\"tooltip\"\n          className={tooltipClassName}\n          style={{\n            [side === 'top' || side === 'bottom' ? 'marginTop' as const : 'marginLeft' as const]:\n              (side === 'top' || side === 'left') ? -sideOffset : sideOffset,\n          }}\n        >\n          {content}\n          {showArrow && (\n            <div \n              className={arrowClassName} \n              aria-hidden=\"true\"\n            />\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\n// 🔥 편의 함수들\nexport const TooltipProvider = ({ children }: { children: ReactNode }): React.ReactElement => {\n  return <>{children}</>;\n};\n\nexport const TooltipTrigger = ({ children }: { children: ReactNode }): React.ReactElement => {\n  return <>{children}</>;\n};\n\nexport const TooltipContent = ({ children }: { children: ReactNode }): React.ReactElement => {\n  return <>{children}</>;\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1333, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/loop/loop/src/renderer/components/ui/Badge.tsx"],"sourcesContent":["'use client';\n\nimport { ReactNode, forwardRef } from 'react';\nimport { Logger } from '../../../shared/logger';\n\n// 🔥 기가차드 규칙: 프리컴파일된 스타일 상수\nconst BADGE_STYLES = {\n  base: 'inline-flex items-center rounded-full text-xs font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2',\n  sizes: {\n    sm: 'px-2 py-0.5 text-xs',\n    md: 'px-2.5 py-1 text-xs',\n    lg: 'px-3 py-1.5 text-sm',\n  },\n  variants: {\n    default: 'bg-slate-100 text-slate-800 hover:bg-slate-200',\n    primary: 'bg-blue-100 text-blue-800 hover:bg-blue-200',\n    success: 'bg-green-100 text-green-800 hover:bg-green-200',\n    warning: 'bg-yellow-100 text-yellow-800 hover:bg-yellow-200',\n    danger: 'bg-red-100 text-red-800 hover:bg-red-200',\n    purple: 'bg-purple-100 text-purple-800 hover:bg-purple-200',\n    orange: 'bg-orange-100 text-orange-800 hover:bg-orange-200',\n    solid: 'bg-slate-900 text-white hover:bg-slate-800',\n    outline: 'border border-slate-300 bg-transparent text-slate-700 hover:bg-slate-50',\n  },\n  interactive: 'cursor-pointer select-none',\n  disabled: 'opacity-50 cursor-not-allowed pointer-events-none',\n} as const;\n\n// 🔥 기가차드 규칙: 명시적 타입 정의\nexport interface BadgeProps {\n  readonly variant?: keyof typeof BADGE_STYLES.variants;\n  readonly size?: keyof typeof BADGE_STYLES.sizes;\n  readonly interactive?: boolean;\n  readonly disabled?: boolean;\n  readonly className?: string;\n  readonly children: ReactNode;\n  readonly onClick?: () => void;\n  readonly role?: string;\n  readonly 'aria-label'?: string;\n  readonly 'aria-pressed'?: boolean;\n}\n\nfunction cn(...classes: (string | undefined | false)[]): string {\n  return classes.filter(Boolean).join(' ');\n}\n\nexport const Badge = forwardRef<HTMLSpanElement, BadgeProps>(\n  ({ \n    variant = 'default', \n    size = 'md',\n    interactive = false,\n    disabled = false,\n    className, \n    children, \n    onClick,\n    role,\n    'aria-label': ariaLabel,\n    'aria-pressed': ariaPressed,\n    ...props \n  }, ref) => {\n    \n    const badgeClassName = cn(\n      BADGE_STYLES.base,\n      BADGE_STYLES.variants[variant],\n      BADGE_STYLES.sizes[size],\n      interactive && BADGE_STYLES.interactive,\n      disabled && BADGE_STYLES.disabled,\n      className\n    );\n\n    const handleClick = (): void => {\n      if (disabled || !onClick) return;\n      \n      Logger.info('BADGE', `Badge clicked: ${variant}`, { size, interactive });\n      onClick();\n    };\n\n    const handleKeyDown = (event: React.KeyboardEvent<HTMLSpanElement>): void => {\n      if (disabled || !onClick) return;\n      \n      if (event.key === 'Enter' || event.key === ' ') {\n        event.preventDefault();\n        handleClick();\n      }\n    };\n\n    return (\n      <span\n        ref={ref}\n        className={badgeClassName}\n        onClick={interactive ? handleClick : undefined}\n        onKeyDown={interactive ? handleKeyDown : undefined}\n        role={interactive ? (role || 'button') : role}\n        tabIndex={interactive && !disabled ? 0 : undefined}\n        aria-label={ariaLabel}\n        aria-pressed={interactive ? ariaPressed : undefined}\n        aria-disabled={disabled}\n        {...props}\n      >\n        {children}\n      </span>\n    );\n  }\n);\n\nBadge.displayName = 'Badge';\n"],"names":[],"mappings":";;;;AAEA;;;;;;AAFA;;;;AAKA,4BAA4B;AAC5B,MAAM,eAAe;IACnB,MAAM;IACN,OAAO;QACL,IAAI;QACJ,IAAI;QACJ,IAAI;IACN;IACA,UAAU;QACR,SAAS;QACT,SAAS;QACT,SAAS;QACT,SAAS;QACT,QAAQ;QACR,QAAQ;QACR,QAAQ;QACR,OAAO;QACP,SAAS;IACX;IACA,aAAa;IACb,UAAU;AACZ;AAgBA,SAAS,GAAG,GAAG,OAAuC;IACpD,OAAO,QAAQ,MAAM,CAAC,SAAS,IAAI,CAAC;AACtC;AAEO,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,OAC5B,CAAC,EACC,UAAU,SAAS,EACnB,OAAO,IAAI,EACX,cAAc,KAAK,EACnB,WAAW,KAAK,EAChB,SAAS,EACT,QAAQ,EACR,OAAO,EACP,IAAI,EACJ,cAAc,SAAS,EACvB,gBAAgB,WAAW,EAC3B,GAAG,OACJ,EAAE;IAED,MAAM,iBAAiB,GACrB,aAAa,IAAI,EACjB,aAAa,QAAQ,CAAC,QAAQ,EAC9B,aAAa,KAAK,CAAC,KAAK,EACxB,eAAe,aAAa,WAAW,EACvC,YAAY,aAAa,QAAQ,EACjC;IAGF,MAAM,cAAc;QAClB,IAAI,YAAY,CAAC,SAAS;QAE1B,OAAO,IAAI,CAAC,SAAS,CAAC,eAAe,EAAE,SAAS,EAAE;YAAE;YAAM;QAAY;QACtE;IACF;IAEA,MAAM,gBAAgB,CAAC;QACrB,IAAI,YAAY,CAAC,SAAS;QAE1B,IAAI,MAAM,GAAG,KAAK,WAAW,MAAM,GAAG,KAAK,KAAK;YAC9C,MAAM,cAAc;YACpB;QACF;IACF;IAEA,qBACE,6LAAC;QACC,KAAK;QACL,WAAW;QACX,SAAS,cAAc,cAAc;QACrC,WAAW,cAAc,gBAAgB;QACzC,MAAM,cAAe,QAAQ,WAAY;QACzC,UAAU,eAAe,CAAC,WAAW,IAAI;QACzC,cAAY;QACZ,gBAAc,cAAc,cAAc;QAC1C,iBAAe;QACd,GAAG,KAAK;kBAER;;;;;;AAGP;;AAGF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1421, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/loop/loop/src/renderer/components/layout/AppSidebar.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect, useLayoutEffect, useRef } from 'react';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { useSettings } from '../../app/settings/hooks/useSettings';\nimport { Avatar } from '../ui/Avatar';\nimport {\n  Home,\n  Folder,\n  BarChart3,\n  Sparkles,\n  Settings,\n  ChevronLeft,\n  ChevronRight,\n  Cloud,\n  Wifi,\n  WifiOff,\n  type LucideIcon\n} from 'lucide-react';\nimport { Button } from '../ui/Button';\nimport { Tooltip } from '../ui/Tooltip';\nimport { Badge } from '../ui/Badge';\nimport { Logger } from '../../../shared/logger';\n\n// 🔥 기가차드 규칙: 프리컴파일된 스타일 상수\nconst SIDEBAR_STYLES = {\n  container: 'flex flex-col h-full bg-white dark:bg-slate-900 border-r border-slate-200 dark:border-slate-700 transition-all duration-300 min-w-0',\n  collapsed: 'w-16',\n  expanded: 'w-64',\n  logoSection: 'h-auto min-h-[4rem] flex flex-col justify-center border-b border-slate-200 dark:border-slate-700 px-6 py-3',\n  logoCollapsed: 'h-auto min-h-[8rem] flex items-center justify-center border-b border-slate-200 dark:border-slate-700 px-3 py-4',\n  logoText: 'text-xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent',\n  logoIcon: 'w-8 h-8 bg-gradient-to-r from-blue-600 to-purple-600 rounded-lg flex items-center justify-center text-white font-bold text-sm',\n  profileSection: 'border-b border-slate-200 dark:border-slate-700 p-4',\n  profileCollapsed: 'border-b border-slate-200 dark:border-slate-700 p-3 flex flex-col items-center gap-2',\n  profileContent: 'flex items-center gap-3',\n  profileInfo: 'flex-1',\n  profileName: 'font-medium text-slate-900 dark:text-slate-100 text-sm',\n  profileStatus: 'flex items-center gap-1 mt-0.5',\n  statusDot: 'w-1.5 h-1.5 bg-green-500 rounded-full',\n  statusText: 'text-xs text-slate-500 dark:text-slate-400',\n  collapseButton: 'h-6 w-6 p-0 text-slate-400 hover:text-slate-600 dark:text-slate-500 dark:hover:text-slate-300',\n  navSection: 'flex-1 py-4',\n  navList: 'space-y-1 px-3',\n  navItem: 'flex items-center h-10 px-3 text-slate-700 dark:text-slate-300 hover:bg-slate-100 dark:hover:bg-slate-800 rounded-lg transition-all duration-150 group cursor-pointer',\n  navItemActive: 'flex items-center h-10 px-3 bg-blue-50 dark:bg-blue-950 text-blue-600 dark:text-blue-400 rounded-lg font-medium',\n  navItemCollapsed: 'flex items-center justify-center h-10 w-10 mx-auto text-slate-700 dark:text-slate-300 hover:bg-slate-100 dark:hover:bg-slate-800 rounded-lg transition-all duration-150 cursor-pointer',\n  navItemActiveCollapsed: 'flex items-center justify-center h-10 w-10 mx-auto bg-blue-50 dark:bg-blue-950 text-blue-600 dark:text-blue-400 rounded-lg',\n  icon: 'w-5 h-5 group-hover:scale-110 transition-transform duration-150 flex-shrink-0',\n  iconCollapsed: 'w-5 h-5',\n  text: 'ml-3 font-medium',\n  badge: 'ml-auto',\n  bottomSection: 'border-t border-slate-200 dark:border-slate-700 p-3',\n} as const;\n\n// 🔥 기가차드 규칙: 명시적 타입 정의\ninterface SidebarItem {\n  readonly id: string;\n  readonly label: string;\n  readonly icon: LucideIcon;\n  readonly href: string;\n  readonly badge?: number;\n  readonly ariaLabel?: string;\n}\n\nexport interface AppSidebarProps {\n  readonly activeRoute?: string;\n  readonly onNavigate?: (href: string) => void;\n  readonly collapsed?: boolean;\n  readonly onToggleCollapse?: () => void;\n}\n\n// 🔥 기가차드 규칙: 상수 분리\nconst SIDEBAR_ITEMS: readonly SidebarItem[] = [\n  {\n    id: 'dashboard',\n    label: '대시보드',\n    icon: Home,\n    href: '/',\n    ariaLabel: '대시보드로 이동'\n  },\n  {\n    id: 'projects',\n    label: '프로젝트',\n    icon: Folder,\n    href: '/projects',\n    ariaLabel: '프로젝트 관리로 이동'\n  },\n  {\n    id: 'analytics',\n    label: '통계',\n    icon: BarChart3,\n    href: '/analytics',\n    ariaLabel: '분석 및 통계로 이동'\n  },\n  {\n    id: 'ai',\n    label: 'Loop AI',\n    icon: Sparkles,\n    href: '/ai',\n    badge: 2,\n    ariaLabel: 'AI 도구로 이동'\n  },\n  {\n    id: 'settings',\n    label: '설정',\n    icon: Settings,\n    href: '/settings',\n    ariaLabel: '설정으로 이동'\n  },\n] as const;\n\nexport function AppSidebar({\n  activeRoute = '/',\n  onNavigate,\n  collapsed: controlledCollapsed,\n  onToggleCollapse\n}: AppSidebarProps): React.ReactElement {\n\n  const [internalCollapsed, setInternalCollapsed] = useState<boolean>(false);\n  const isControlled = controlledCollapsed !== undefined;\n  const collapsed = isControlled ? controlledCollapsed : internalCollapsed;\n\n  const authCtx = useAuth() as any;\n  const { auth: googleUserInfo, loadAuthStatus, loaded: authLoaded } = authCtx;\n\n  // settings hook for account-local profile (displayName, avatar)\n  const { settings: loadedSettings, loading: settingsLoading, setSettings } = useSettings();\n\n  // avatar src state to handle onError fallback and controlled updates\n  const defaultAvatar = '/static/avatar-default.png';\n  const [avatarSrc, setAvatarSrc] = useState<string | null>(null);\n\n  // Use consistent initial state to prevent layout shift\n  const [mounted, setMounted] = useState<boolean>(false);\n  const [isOnline, setIsOnline] = useState<boolean>(true); // Default to online to prevent flash\n\n  // Prefer account settings when not authenticated via Google. If Google auth present, use google profile.\n  const accountProfile = loadedSettings?.account;\n  const fileInputRef = useRef<HTMLInputElement | null>(null);\n\n  // unify visible profile for legacy UI uses\n  const visibleProfile: any = (authLoaded && googleUserInfo && googleUserInfo.isAuthenticated)\n    ? googleUserInfo\n    : accountProfile\n      ? {\n        isAuthenticated: !!(accountProfile.displayName || accountProfile.username || accountProfile.email),\n        userName: accountProfile.displayName || accountProfile.username,\n        userEmail: accountProfile.email,\n        userPicture: accountProfile.avatar,\n      }\n      : null;\n\n  // update avatarSrc when authLoaded, googleUserInfo, or account settings change\n  useEffect(() => {\n    Logger.debug('APPSIDEBAR', 'Avatar update triggered', {\n      authLoaded,\n      googleUserInfoAuthenticated: googleUserInfo?.isAuthenticated,\n      accountProfileExists: !!accountProfile,\n      accountProfileAvatar: accountProfile?.avatar,\n      accountProfileAvatarThumb: (accountProfile as any)?.avatarThumb\n    });\n\n    // 🔥 수정: 로컬 아바타 설정이 있으면 그것을 우선으로 사용\n    if (accountProfile?.avatar) {\n      const avatarValue = accountProfile.avatar;\n      Logger.debug('APPSIDEBAR', 'Using local account profile avatar (priority)', { avatarValue });\n\n      const v = String(avatarValue);\n      if (v.startsWith('file://')) {\n        const path = v.replace(/^file:\\/\\//, '');\n        (window.electronAPI as any).files?.readFileAsDataUrl(path).then((r: any) => {\n          if (r && r.success && r.data) {\n            Logger.debug('APPSIDEBAR', 'Loaded file:// avatar as data URL');\n            setAvatarSrc(r.data as string);\n          } else {\n            Logger.warn('APPSIDEBAR', 'Failed to load file:// avatar');\n            setAvatarSrc(null);\n          }\n        }).catch(() => {\n          Logger.warn('APPSIDEBAR', 'Error loading file:// avatar');\n          setAvatarSrc(null);\n        });\n      } else if (v.startsWith('loop-avatar://') || v.startsWith('data:')) {\n        // 🔥 loop-avatar:// 프로토콜과 data: URL 모두 직접 사용\n        Logger.debug('APPSIDEBAR', 'Using loop-avatar:// or data: URL', { url: v.substring(0, 50) + '...' });\n        setAvatarSrc(v);\n      } else {\n        Logger.debug('APPSIDEBAR', 'Using direct avatar URL', { url: v });\n        setAvatarSrc(v);\n      }\n      return; // 로컬 아바타가 있으면 Google 아바타 사용하지 않음\n    }\n\n    // prefer Google authenticated profile when available (only if no local avatar)\n    if (authLoaded && googleUserInfo && googleUserInfo.isAuthenticated) {\n      const picture = googleUserInfo.userPicture || (googleUserInfo.userEmail ? `https://ui-avatars.com/api/?name=${encodeURIComponent(googleUserInfo.userEmail)}&background=4f46e5&color=fff&size=64` : undefined);\n      Logger.debug('APPSIDEBAR', 'Using Google profile picture (fallback)', { picture });\n      setAvatarSrc(picture || null);\n      return;\n    }\n\n    // fallback to generated avatar or null\n    if (accountProfile && (accountProfile.displayName || accountProfile.username || accountProfile.email)) {\n      const name = String(accountProfile.displayName || accountProfile.username || accountProfile.email || '');\n      const fallbackUrl = `https://ui-avatars.com/api/?name=${encodeURIComponent(name)}&background=4f46e5&color=fff&size=64`;\n      Logger.debug('APPSIDEBAR', 'Using fallback generated avatar', { name, fallbackUrl });\n      setAvatarSrc(fallbackUrl);\n    } else {\n      Logger.debug('APPSIDEBAR', 'No avatar data available, setting to null');\n      setAvatarSrc(null);\n    }\n  }, [authLoaded, googleUserInfo, accountProfile]);\n\n  // subscribe to settings change broadcast for account.avatar and other profile fields\n  useEffect(() => {\n    try {\n      const unsub = (window.electronAPI as any).settings.onDidChange?.((payload: any) => {\n        if (!payload || !payload.keyPath) return;\n\n        // handle avatar and avatarThumb changes\n        if (payload.keyPath === 'account.avatar' || payload.keyPath === 'account.avatarThumb') {\n          const val = payload.value as string | null;\n          Logger.debug('APPSIDEBAR', 'Avatar setting changed via broadcast', {\n            keyPath: payload.keyPath,\n            hasValue: !!val,\n            valuePrefix: val?.substring(0, 50) + '...' || 'null'\n          });\n\n          if (!val) {\n            Logger.debug('APPSIDEBAR', 'Avatar value is null, clearing avatarSrc');\n            setAvatarSrc(null);\n            return;\n          }\n          if (val.startsWith('file://')) {\n            const p = val.replace(/^file:\\/\\//, '');\n            Logger.debug('APPSIDEBAR', 'Loading file:// avatar from broadcast', { path: p });\n            (window.electronAPI as any).files?.readFileAsDataUrl(p).then((r: any) => {\n              if (r && r.success && r.data) {\n                Logger.debug('APPSIDEBAR', 'Successfully loaded file:// avatar from broadcast');\n                setAvatarSrc(r.data as string);\n              }\n            }).catch(() => {\n              Logger.warn('APPSIDEBAR', 'Failed to load file:// avatar from broadcast');\n            });\n          } else {\n            // 🔥 data: URL과 loop-avatar:// 프로토콜 모두 직접 사용\n            Logger.debug('APPSIDEBAR', 'Setting avatar from broadcast', { valuePrefix: val.substring(0, 50) + '...' });\n            setAvatarSrc(val);\n          }\n        }\n\n        // for other account.* changes, trigger settings re-fetch to update display name etc\n        if (payload.keyPath.startsWith('account.') && payload.keyPath !== 'account.avatar') {\n          // Force settings hook to re-merge (this will trigger accountProfile change)\n          // The useSettings hook already subscribes to onDidChange and updates its state\n        }\n      });\n\n      return () => { if (typeof unsub === 'function') unsub(); };\n    } catch (e) {\n      return;\n    }\n  }, []);\n\n  // handle avatar click -> upload when local account, open settings when Google-auth\n  const handleAvatarClick = () => {\n    if (authLoaded && googleUserInfo && googleUserInfo.isAuthenticated) {\n      onNavigate?.('/settings');\n      return;\n    }\n\n    fileInputRef.current?.click();\n  };\n\n  const handleFileChange = async (ev: React.ChangeEvent<HTMLInputElement>) => {\n    const f = ev.target.files?.[0];\n    if (!f) return;\n\n    // Size limit check (5MB)\n    const maxSize = 5 * 1024 * 1024;\n    if (f.size > maxSize) {\n      alert('파일 크기가 5MB를 초과합니다. 더 작은 파일을 선택해주세요.');\n      return;\n    }\n\n    const reader = new FileReader();\n    reader.onload = async () => {\n      const dataUrl = reader.result as string;\n      try {\n        const res = await window.electronAPI.settings.set('account.avatar', dataUrl);\n        if (res && res.success) {\n          // Don't update local settings state manually - onDidChange will handle it\n          // Just log success\n          Logger.info('SIDEBAR', 'Avatar uploaded successfully');\n        } else {\n          throw new Error(res?.error || 'save failed');\n        }\n      } catch (e) {\n        console.error('Failed to save avatar to settings', e);\n        alert('프로필 저장에 실패했습니다');\n      }\n    };\n    reader.readAsDataURL(f);\n  };\n\n  // Synchronous state restoration to prevent flash\n  useLayoutEffect(() => {\n    if (typeof window !== 'undefined') {\n      try {\n        // Load online status first\n        const snap = (window as any).loopSnapshot && typeof (window as any).loopSnapshot.get === 'function' ? (window as any).loopSnapshot.get() : null;\n        if (snap && typeof snap.online === 'boolean') {\n          setIsOnline(snap.online);\n        } else {\n          setIsOnline(navigator.onLine);\n        }\n      } catch (e) {\n        setIsOnline(navigator.onLine);\n      }\n    }\n    setMounted(true);\n  }, []);\n\n  // Online/offline event listeners\n  useEffect(() => {\n    if (!mounted) return;\n\n    const handleOnline = () => setIsOnline(true);\n    const handleOffline = () => setIsOnline(false);\n\n    window.addEventListener('online', handleOnline);\n    window.addEventListener('offline', handleOffline);\n\n    return () => {\n      window.removeEventListener('online', handleOnline);\n      window.removeEventListener('offline', handleOffline);\n    };\n  }, [mounted]);\n\n  // no extra sync needed - AuthContext bootstraps initial state from server\n\n  const handleToggleCollapse = (): void => {\n    if (isControlled) {\n      onToggleCollapse?.();\n    } else {\n      setInternalCollapsed(!collapsed);\n    }\n    Logger.info('SIDEBAR', `Sidebar ${collapsed ? 'expanded' : 'collapsed'}`);\n  };\n\n  const handleNavigate = (item: SidebarItem): void => {\n    Logger.info('SIDEBAR', `Navigation to ${item.label}`, { href: item.href });\n    onNavigate?.(item.href);\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent, item: SidebarItem): void => {\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault();\n      handleNavigate(item);\n    }\n  };\n\n  const renderNavItem = (item: SidebarItem): React.ReactElement => {\n    const isActive = activeRoute === item.href;\n    const Icon = item.icon;\n\n    const navItemContent = (\n      <div\n        className={\n          collapsed\n            ? isActive\n              ? SIDEBAR_STYLES.navItemActiveCollapsed\n              : SIDEBAR_STYLES.navItemCollapsed\n            : isActive\n              ? SIDEBAR_STYLES.navItemActive\n              : SIDEBAR_STYLES.navItem\n        }\n        role=\"button\"\n        tabIndex={0}\n        onClick={() => handleNavigate(item)}\n        onKeyDown={(e) => handleKeyDown(e, item)}\n        aria-label={item.ariaLabel || item.label}\n        aria-current={isActive ? 'page' : undefined}\n      >\n        <Icon className={collapsed ? SIDEBAR_STYLES.iconCollapsed : SIDEBAR_STYLES.icon} />\n        {!collapsed && (\n          <>\n            <span className={SIDEBAR_STYLES.text}>{item.label}</span>\n            {item.badge && item.badge > 0 && (\n              <Badge variant=\"danger\" size=\"sm\" className={SIDEBAR_STYLES.badge}>\n                {item.badge > 9 ? '9+' : item.badge}\n              </Badge>\n            )}\n          </>\n        )}\n      </div>\n    );\n\n    return (\n      <div key={item.id}>\n        {collapsed ? (\n          <Tooltip content={item.label} side=\"right\">\n            <div>\n              {navItemContent}\n            </div>\n          </Tooltip>\n        ) : (\n          navItemContent\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <aside\n      className={`${SIDEBAR_STYLES.container} ${collapsed ? SIDEBAR_STYLES.collapsed : SIDEBAR_STYLES.expanded\n        }`}\n      aria-label=\"사이드바 네비게이션\"\n      role=\"navigation\"\n    >\n      {/* 로고 */}\n      <div className={collapsed ? SIDEBAR_STYLES.logoCollapsed : SIDEBAR_STYLES.logoSection}>\n        {collapsed ? (\n          <div className=\"flex flex-col items-center gap-3 py-4\">\n            <div className={SIDEBAR_STYLES.logoIcon}>L</div>\n\n            {/* 축소 시 사용자 프로필 - Google 계정 정보 표시 */}\n            <div\n              className=\"flex flex-col items-center gap-1 cursor-pointer hover:bg-slate-100 dark:hover:bg-slate-800 p-2 rounded-lg transition-colors mt-2\"\n              onClick={() => {\n                Logger.info('SIDEBAR', 'User profile clicked (collapsed)');\n                onNavigate?.('/settings');\n              }}\n              role=\"button\"\n              tabIndex={0}\n              aria-label=\"사용자 프로필\"\n            >\n              {!authLoaded && settingsLoading ? (\n                // loading skeleton\n                <div className=\"w-8 h-8 rounded-full bg-slate-200 dark:bg-slate-700 animate-pulse\" />\n              ) : (\n                <Avatar\n                  size=\"md\"\n                  src={avatarSrc || undefined}\n                  aria-label={(accountProfile?.displayName || accountProfile?.username || googleUserInfo?.userName || 'Loop 사용자')}\n                  className=\"border-2 border-white dark:border-slate-800 shadow-sm\"\n                >\n                  <span className=\"text-sm font-medium\">{(accountProfile?.displayName || accountProfile?.username || googleUserInfo?.userName || 'L').charAt(0).toUpperCase()}</span>\n                </Avatar>\n              )}\n              <div className={isOnline ? 'w-1.5 h-1.5 bg-green-500 rounded-full' : 'w-1.5 h-1.5 bg-gray-400 rounded-full'} />\n            </div>\n\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              className={SIDEBAR_STYLES.collapseButton}\n              onClick={handleToggleCollapse}\n              aria-label=\"사이드바 확장\"\n            >\n              <ChevronRight className=\"w-3 h-3\" />\n            </Button>\n          </div>\n        ) : (\n          <div className=\"space-y-3\">\n            <div className=\"flex items-center justify-between w-full\">\n              <h1 className={SIDEBAR_STYLES.logoText}>Loop</h1>\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                className={SIDEBAR_STYLES.collapseButton}\n                onClick={handleToggleCollapse}\n                aria-label=\"사이드바 축소\"\n              >\n                <ChevronLeft className=\"w-3 h-3\" />\n              </Button>\n            </div>\n\n            {/* 확장 시 사용자 프로필: Google 계정 정보 노출 */}\n            <div\n              className=\"flex items-center gap-3 cursor-pointer hover:bg-slate-100 dark:hover:bg-slate-800 p-2 rounded-lg transition-colors\"\n              onClick={() => {\n                Logger.info('SIDEBAR', 'User profile clicked');\n                onNavigate?.('/settings');\n              }}\n              role=\"button\"\n              tabIndex={0}\n              aria-label=\"사용자 프로필\"\n            >\n              {!authLoaded && settingsLoading ? (\n                <div className=\"w-10 h-10 rounded-full bg-slate-200 dark:bg-slate-700 animate-pulse\" />\n              ) : (\n                <Avatar\n                  size=\"lg\"\n                  src={avatarSrc || undefined}\n                  aria-label={(accountProfile?.displayName || accountProfile?.username || googleUserInfo?.userName || 'Loop 사용자')}\n                  className=\"border-2 border-white dark:border-slate-800 shadow-sm\"\n                >\n                  <span className=\"text-lg font-medium\">{(accountProfile?.displayName || accountProfile?.username || googleUserInfo?.userName || 'L').charAt(0).toUpperCase()}</span>\n                </Avatar>\n              )}\n              <div className=\"flex-1\">\n                <div className=\"font-medium text-slate-900 dark:text-slate-100 text-sm\">{\n                  // skeleton for name until authLoaded\n                  !authLoaded && settingsLoading ? (\n                    <div className=\"h-4 w-28 bg-slate-200 dark:bg-slate-700 rounded animate-pulse\" />\n                  ) : (\n                    // Show display name from account settings, or fall back to email, or Loop 사용자\n                    (accountProfile?.displayName || accountProfile?.username || accountProfile?.email || (googleUserInfo?.isAuthenticated ? (googleUserInfo.userName || googleUserInfo.userEmail) : null) || 'Loop 사용자')\n                  )\n                }</div>\n                <div className=\"flex items-center gap-1 mt-0.5\">\n                  <div className={isOnline ? 'w-1.5 h-1.5 bg-green-500 rounded-full' : 'w-1.5 h-1.5 bg-gray-400 rounded-full'} />\n                  <span suppressHydrationWarning className=\"text-xs text-slate-500 dark:text-slate-400\">{\n                    !authLoaded ? '상태 확인 중...' : (googleUserInfo?.isAuthenticated ? 'Google 계정' : (accountProfile?.displayName || accountProfile?.username || accountProfile?.email ? '로컬 계정' : (isOnline ? '온라인' : '오프라인')))\n                  }</span>\n                </div>\n                {visibleProfile && visibleProfile.isAuthenticated && visibleProfile.userEmail && (\n                  <div className=\"text-xs text-slate-500 dark:text-slate-400 mt-1 transition-opacity duration-200\">{visibleProfile.userEmail}</div>\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* 네비게이션 */}\n      <nav className={SIDEBAR_STYLES.navSection} aria-label=\"메인 메뉴\">\n        <div className={SIDEBAR_STYLES.navList}>\n          {SIDEBAR_ITEMS.map(renderNavItem)}\n        </div>\n      </nav>\n    </aside>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2132, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/loop/loop/src/renderer/components/ui/Input.tsx"],"sourcesContent":["'use client';\n\nimport { forwardRef, useState, ReactNode, useId } from 'react';\nimport { Eye, EyeOff, Search, X } from 'lucide-react';\nimport { Logger } from '../../../shared/logger';\n\n// 🔥 기가차드 규칙: 프리컴파일된 스타일 상수\nconst INPUT_STYLES = {\n  base: 'flex h-10 w-full rounded-md border border-slate-300 bg-white px-3 py-2 text-sm ring-offset-white file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-slate-500 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:border-slate-700 dark:bg-slate-900 dark:text-slate-50 dark:ring-offset-slate-950 dark:placeholder:text-slate-400 dark:focus:ring-blue-400',\n  sizes: {\n    sm: 'h-8 text-xs',\n    md: 'h-10 text-sm',\n    lg: 'h-12 text-base',\n  },\n  variants: {\n    default: 'border-slate-300 focus:ring-blue-500',\n    error: 'border-red-300 focus:ring-red-500 focus:border-red-500',\n    success: 'border-green-300 focus:ring-green-500 focus:border-green-500',\n  },\n  withIcon: {\n    left: 'pl-10',\n    right: 'pr-10',\n  },\n  container: 'relative w-full',\n  iconContainer: {\n    left: 'absolute left-3 top-1/2 transform -translate-y-1/2 text-slate-400 dark:text-slate-500',\n    right: 'absolute right-3 top-1/2 transform -translate-y-1/2 text-slate-400 dark:text-slate-500',\n  },\n  iconButton: 'absolute right-3 top-1/2 transform -translate-y-1/2 text-slate-400 hover:text-slate-600 dark:text-slate-500 dark:hover:text-slate-300 cursor-pointer transition-colors',\n} as const;\n\n// 🔥 기가차드 규칙: 명시적 타입 정의\nexport interface InputProps extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'size'> {\n  readonly size?: keyof typeof INPUT_STYLES.sizes;\n  readonly variant?: keyof typeof INPUT_STYLES.variants;\n  readonly leftIcon?: ReactNode;\n  readonly rightIcon?: ReactNode;\n  readonly clearable?: boolean;\n  readonly label?: string;\n  readonly error?: string;\n  readonly helperText?: string;\n  readonly required?: boolean;\n  readonly onClear?: () => void;\n}\n\nfunction cn(...classes: (string | undefined | false | null)[]): string {\n  return classes.filter(Boolean).join(' ');\n}\n\nexport const Input = forwardRef<HTMLInputElement, InputProps>(\n  ({\n    className,\n    type = 'text',\n    size = 'md',\n    variant = 'default',\n    leftIcon,\n    rightIcon,\n    clearable = false,\n    label,\n    error,\n    helperText,\n    required = false,\n    disabled,\n    value,\n    onChange,\n    onClear,\n    ...props\n  }, ref) => {\n\n    const [showPassword, setShowPassword] = useState<boolean>(false);\n    const [focused, setFocused] = useState<boolean>(false);\n\n    const isPassword = type === 'password';\n    const hasValue = value !== undefined && value !== '';\n    const showClearButton = clearable && hasValue && !disabled;\n    const showPasswordToggle = isPassword && !disabled;\n\n    const inputClassName = cn(\n      INPUT_STYLES.base,\n      INPUT_STYLES.sizes[size],\n      INPUT_STYLES.variants[error ? 'error' : variant],\n      leftIcon ? INPUT_STYLES.withIcon.left : false,\n      (rightIcon || showClearButton || showPasswordToggle) ? INPUT_STYLES.withIcon.right : false,\n      className\n    );\n\n    const handleClear = (): void => {\n      if (onClear) {\n        onClear();\n      } else if (onChange) {\n        // 클리어 이벤트 시뮬레이션\n        const event = {\n          target: { value: '' },\n          currentTarget: { value: '' },\n        } as React.ChangeEvent<HTMLInputElement>;\n        onChange(event);\n      }\n      Logger.debug('INPUT', 'Input cleared');\n    };\n\n    const togglePasswordVisibility = (): void => {\n      setShowPassword(!showPassword);\n      Logger.debug('INPUT', `Password visibility toggled: ${!showPassword}`);\n    };\n\n    const handleFocus = (event: React.FocusEvent<HTMLInputElement>): void => {\n      setFocused(true);\n      props.onFocus?.(event);\n    };\n\n    const handleBlur = (event: React.FocusEvent<HTMLInputElement>): void => {\n      setFocused(false);\n      props.onBlur?.(event);\n    };\n\n    const actualType = isPassword && showPassword ? 'text' : type;\n\n    const _uid = useId();\n    const labelId = label ? `input-${_uid}-label` : undefined;\n    const errorId = error ? `input-${_uid}-error` : undefined;\n    const helperId = helperText ? `input-${_uid}-helper` : undefined;\n\n    return (\n      <div className=\"w-full\">\n        {/* 라벨 */}\n        {label && (\n          <label\n            id={labelId}\n            htmlFor={props.id}\n            className=\"block text-sm font-medium text-slate-700 dark:text-slate-300 mb-2\"\n          >\n            {label}\n            {required && <span className=\"text-red-500 ml-1\">*</span>}\n          </label>\n        )}\n\n        {/* Input Container */}\n        <div className={INPUT_STYLES.container}>\n          {/* 좌측 아이콘 */}\n          {leftIcon && (\n            <div className={INPUT_STYLES.iconContainer.left}>\n              {leftIcon}\n            </div>\n          )}\n\n          {/* Input Field */}\n          <input\n            ref={ref}\n            type={actualType}\n            className={inputClassName}\n            disabled={disabled}\n            value={value}\n            onChange={onChange}\n            onFocus={handleFocus}\n            onBlur={handleBlur}\n            aria-labelledby={labelId}\n            aria-describedby={cn(\n              errorId && errorId,\n              helperId && helperId\n            ) || undefined}\n            aria-invalid={!!error}\n            aria-required={required}\n            {...props}\n          />\n\n          {/* 우측 액션 버튼들 */}\n          <div className={INPUT_STYLES.iconContainer.right}>\n            <div className=\"flex items-center gap-1\">\n              {/* 클리어 버튼 */}\n              {showClearButton && (\n                <button\n                  type=\"button\"\n                  className={cn(INPUT_STYLES.iconButton, 'p-0.5')}\n                  onClick={handleClear}\n                  aria-label=\"입력 내용 지우기\"\n                  tabIndex={-1}\n                >\n                  <X className=\"h-4 w-4\" />\n                </button>\n              )}\n\n              {/* 패스워드 토글 */}\n              {showPasswordToggle && (\n                <button\n                  type=\"button\"\n                  className={cn(INPUT_STYLES.iconButton, 'p-0.5')}\n                  onClick={togglePasswordVisibility}\n                  aria-label={showPassword ? '패스워드 숨기기' : '패스워드 보기'}\n                  tabIndex={-1}\n                >\n                  {showPassword ? (\n                    <EyeOff className=\"h-4 w-4\" />\n                  ) : (\n                    <Eye className=\"h-4 w-4\" />\n                  )}\n                </button>\n              )}\n\n              {/* 우측 아이콘 */}\n              {rightIcon && !showClearButton && !showPasswordToggle && rightIcon}\n            </div>\n          </div>\n        </div>\n\n        {/* 에러 메시지 */}\n        {error && (\n          <p\n            id={errorId}\n            className=\"mt-2 text-sm text-red-600 dark:text-red-400\"\n            role=\"alert\"\n          >\n            {error}\n          </p>\n        )}\n\n        {/* 도움말 텍스트 */}\n        {helperText && !error && (\n          <p\n            id={helperId}\n            className=\"mt-2 text-sm text-slate-500 dark:text-slate-400\"\n          >\n            {helperText}\n          </p>\n        )}\n      </div>\n    );\n  }\n);\n\nInput.displayName = 'Input';\n\n// 🔥 검색 전용 Input 컴포넌트\nexport const SearchInput = forwardRef<HTMLInputElement, Omit<InputProps, 'leftIcon' | 'type'>>(\n  (props, ref) => {\n    return (\n      <Input\n        ref={ref}\n        type=\"search\"\n        leftIcon={<Search className=\"h-4 w-4\" />}\n        placeholder=\"검색...\"\n        clearable\n        {...props}\n      />\n    );\n  }\n);\n\nSearchInput.displayName = 'SearchInput';\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAAA;AAAA;AAAA;;;;;;;;AAHA;;;;AAMA,4BAA4B;AAC5B,MAAM,eAAe;IACnB,MAAM;IACN,OAAO;QACL,IAAI;QACJ,IAAI;QACJ,IAAI;IACN;IACA,UAAU;QACR,SAAS;QACT,OAAO;QACP,SAAS;IACX;IACA,UAAU;QACR,MAAM;QACN,OAAO;IACT;IACA,WAAW;IACX,eAAe;QACb,MAAM;QACN,OAAO;IACT;IACA,YAAY;AACd;AAgBA,SAAS,GAAG,GAAG,OAA8C;IAC3D,OAAO,QAAQ,MAAM,CAAC,SAAS,IAAI,CAAC;AACtC;AAEO,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,KAC5B,CAAC,EACC,SAAS,EACT,OAAO,MAAM,EACb,OAAO,IAAI,EACX,UAAU,SAAS,EACnB,QAAQ,EACR,SAAS,EACT,YAAY,KAAK,EACjB,KAAK,EACL,KAAK,EACL,UAAU,EACV,WAAW,KAAK,EAChB,QAAQ,EACR,KAAK,EACL,QAAQ,EACR,OAAO,EACP,GAAG,OACJ,EAAE;;IAED,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IAC1D,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IAEhD,MAAM,aAAa,SAAS;IAC5B,MAAM,WAAW,UAAU,aAAa,UAAU;IAClD,MAAM,kBAAkB,aAAa,YAAY,CAAC;IAClD,MAAM,qBAAqB,cAAc,CAAC;IAE1C,MAAM,iBAAiB,GACrB,aAAa,IAAI,EACjB,aAAa,KAAK,CAAC,KAAK,EACxB,aAAa,QAAQ,CAAC,QAAQ,UAAU,QAAQ,EAChD,WAAW,aAAa,QAAQ,CAAC,IAAI,GAAG,OACxC,AAAC,aAAa,mBAAmB,qBAAsB,aAAa,QAAQ,CAAC,KAAK,GAAG,OACrF;IAGF,MAAM,cAAc;QAClB,IAAI,SAAS;YACX;QACF,OAAO,IAAI,UAAU;YACnB,gBAAgB;YAChB,MAAM,QAAQ;gBACZ,QAAQ;oBAAE,OAAO;gBAAG;gBACpB,eAAe;oBAAE,OAAO;gBAAG;YAC7B;YACA,SAAS;QACX;QACA,OAAO,KAAK,CAAC,SAAS;IACxB;IAEA,MAAM,2BAA2B;QAC/B,gBAAgB,CAAC;QACjB,OAAO,KAAK,CAAC,SAAS,CAAC,6BAA6B,EAAE,CAAC,cAAc;IACvE;IAEA,MAAM,cAAc,CAAC;QACnB,WAAW;QACX,MAAM,OAAO,GAAG;IAClB;IAEA,MAAM,aAAa,CAAC;QAClB,WAAW;QACX,MAAM,MAAM,GAAG;IACjB;IAEA,MAAM,aAAa,cAAc,eAAe,SAAS;IAEzD,MAAM,OAAO,CAAA,GAAA,6JAAA,CAAA,QAAK,AAAD;IACjB,MAAM,UAAU,QAAQ,CAAC,MAAM,EAAE,KAAK,MAAM,CAAC,GAAG;IAChD,MAAM,UAAU,QAAQ,CAAC,MAAM,EAAE,KAAK,MAAM,CAAC,GAAG;IAChD,MAAM,WAAW,aAAa,CAAC,MAAM,EAAE,KAAK,OAAO,CAAC,GAAG;IAEvD,qBACE,6LAAC;QAAI,WAAU;;YAEZ,uBACC,6LAAC;gBACC,IAAI;gBACJ,SAAS,MAAM,EAAE;gBACjB,WAAU;;oBAET;oBACA,0BAAY,6LAAC;wBAAK,WAAU;kCAAoB;;;;;;;;;;;;0BAKrD,6LAAC;gBAAI,WAAW,aAAa,SAAS;;oBAEnC,0BACC,6LAAC;wBAAI,WAAW,aAAa,aAAa,CAAC,IAAI;kCAC5C;;;;;;kCAKL,6LAAC;wBACC,KAAK;wBACL,MAAM;wBACN,WAAW;wBACX,UAAU;wBACV,OAAO;wBACP,UAAU;wBACV,SAAS;wBACT,QAAQ;wBACR,mBAAiB;wBACjB,oBAAkB,GAChB,WAAW,SACX,YAAY,aACT;wBACL,gBAAc,CAAC,CAAC;wBAChB,iBAAe;wBACd,GAAG,KAAK;;;;;;kCAIX,6LAAC;wBAAI,WAAW,aAAa,aAAa,CAAC,KAAK;kCAC9C,cAAA,6LAAC;4BAAI,WAAU;;gCAEZ,iCACC,6LAAC;oCACC,MAAK;oCACL,WAAW,GAAG,aAAa,UAAU,EAAE;oCACvC,SAAS;oCACT,cAAW;oCACX,UAAU,CAAC;8CAEX,cAAA,6LAAC,+LAAA,CAAA,IAAC;wCAAC,WAAU;;;;;;;;;;;gCAKhB,oCACC,6LAAC;oCACC,MAAK;oCACL,WAAW,GAAG,aAAa,UAAU,EAAE;oCACvC,SAAS;oCACT,cAAY,eAAe,aAAa;oCACxC,UAAU,CAAC;8CAEV,6BACC,6LAAC,6MAAA,CAAA,SAAM;wCAAC,WAAU;;;;;6DAElB,6LAAC,mMAAA,CAAA,MAAG;wCAAC,WAAU;;;;;;;;;;;gCAMpB,aAAa,CAAC,mBAAmB,CAAC,sBAAsB;;;;;;;;;;;;;;;;;;YAM9D,uBACC,6LAAC;gBACC,IAAI;gBACJ,WAAU;gBACV,MAAK;0BAEJ;;;;;;YAKJ,cAAc,CAAC,uBACd,6LAAC;gBACC,IAAI;gBACJ,WAAU;0BAET;;;;;;;;;;;;AAKX;;QA7Ge,6JAAA,CAAA,QAAK;;;KApET;AAoLb,MAAM,WAAW,GAAG;AAGb,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,QAClC,CAAC,OAAO;IACN,qBACE,6LAAC;QACC,KAAK;QACL,MAAK;QACL,wBAAU,6LAAC,yMAAA,CAAA,SAAM;YAAC,WAAU;;;;;;QAC5B,aAAY;QACZ,SAAS;QACR,GAAG,KAAK;;;;;;AAGf;;AAGF,YAAY,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2408, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/loop/loop/src/renderer/components/ui/HydrationGuard.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState } from 'react';\n\n// 🔥 기가차드 하이드레이션 보호 컴포넌트\ninterface HydrationGuardProps {\n  children: React.ReactNode;\n  fallback?: React.ReactNode;\n}\n\nexport function HydrationGuard({ children, fallback = null }: HydrationGuardProps): React.ReactElement {\n  const [isHydrated, setIsHydrated] = useState<boolean>(false);\n\n  useEffect(() => {\n    setIsHydrated(true);\n  }, []);\n\n  return <>{isHydrated ? children : fallback}</>;\n}\n\nexport default HydrationGuard;\n"],"names":[],"mappings":";;;;;AAEA;;;AAFA;;AAUO,SAAS,eAAe,EAAE,QAAQ,EAAE,WAAW,IAAI,EAAuB;;IAC/E,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IAEtD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;oCAAE;YACR,cAAc;QAChB;mCAAG,EAAE;IAEL,qBAAO;kBAAG,aAAa,WAAW;;AACpC;GARgB;KAAA;uCAUD","debugId":null}},
    {"offset": {"line": 2444, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/loop/loop/src/renderer/contexts/GlobalMonitoringContext.tsx"],"sourcesContent":["'use client';\n\nimport React, { createContext, useContext, useState, useCallback, useLayoutEffect, useMemo } from 'react';\nimport { Logger } from '../../shared/logger';\n\n// 🔥 기가차드 규칙: 명시적 타입 정의\nexport interface MonitoringState {\n  isMonitoring: boolean;\n  isAIOpen: boolean;\n  startTime: Date | null;\n  sessionData: {\n    wpm: number;\n    words: number;\n    time: number;\n  };\n}\n\nexport interface MonitoringContextType {\n  state: MonitoringState;\n  startMonitoring: () => Promise<void>;\n  stopMonitoring: () => Promise<void>;\n  toggleAI: () => void;\n  updateSessionData: (data: Partial<MonitoringState['sessionData']>) => void;\n}\n\n// 🔥 컨텍스트 생성\nexport const MonitoringContext = createContext<MonitoringContextType | undefined>(undefined);\n\n// 🔥 초기 상태 상수화 (메모리 최적화)\nconst INITIAL_STATE: MonitoringState = {\n  isMonitoring: false,\n  isAIOpen: false,\n  startTime: null,\n  sessionData: {\n    wpm: 0,\n    words: 0,\n    time: 0,\n  },\n} as const;\n\n// 🔥 프로바이더 컴포넌트\nexport function MonitoringProvider({ children }: { children: React.ReactNode }): React.ReactElement {\n  // 🔥 하이드레이션 불일치 완전 해결: 서버와 클라이언트 동일한 초기값\n  const [state, setState] = useState<MonitoringState>(INITIAL_STATE);\n\n  // 🔥 클라이언트 마운트 후 localStorage에서 상태 복원 (모니터링은 항상 false로 시작)\n  useLayoutEffect(() => {\n    if (typeof window !== 'undefined') {\n      try {\n        const savedState = localStorage.getItem('monitoring-state');\n        if (savedState) {\n          const parsed = JSON.parse(savedState);\n          setState(prev => ({\n            ...prev,\n            // 🔥 모니터링은 항상 false로 시작 (사용자 수동 시작 원칙)\n            isMonitoring: false, \n            isAIOpen: parsed.isAIOpen || false,\n            startTime: null, // 시작 시간도 초기화\n            sessionData: {\n              ...prev.sessionData,\n              ...parsed.sessionData,\n            },\n          }));\n          Logger.debug('MONITORING_CONTEXT', 'State restored from localStorage (monitoring disabled)', { ...parsed, isMonitoring: false });\n        }\n      } catch (error) {\n        Logger.error('MONITORING_CONTEXT', 'Failed to load state from localStorage', error);\n      }\n    }\n  }, []);\n\n  // 🔥 상태 변경 시 localStorage에 저장 (즉시 실행) - 디바운스 적용\n  useLayoutEffect(() => {\n    if (typeof window !== 'undefined') {\n      const timeoutId = setTimeout(() => {\n        try {\n          localStorage.setItem('monitoring-state', JSON.stringify(state));\n          Logger.debug('MONITORING_CONTEXT', 'State saved to localStorage', state);\n        } catch (error) {\n          Logger.error('MONITORING_CONTEXT', 'Failed to save state to localStorage', error);\n        }\n      }, 100); // 100ms 디바운스\n\n      return () => clearTimeout(timeoutId);\n    }\n  }, [state]);\n\n  const startMonitoring = useCallback(async (): Promise<void> => {\n    try {\n      Logger.info('MONITORING_CONTEXT', '🚀 모니터링 시작 요청');\n      \n      // 🔥 버튼 깜빡임 방지: 즉시 상태 업데이트 (낙관적 업데이트)\n      setState(prev => ({\n        ...prev,\n        isMonitoring: true,\n        startTime: new Date(),\n      }));\n      \n      // 🔥 백엔드 요청\n      const result = await window.electronAPI.keyboard.startMonitoring();\n      if (!result.success) {\n        // 🔥 실패 시 상태 롤백\n        setState(prev => ({\n          ...prev,\n          isMonitoring: false,\n          startTime: null,\n        }));\n        \n        // 🔥 권한 관련 에러인지 확인\n        const isPermissionError = result.error && (\n          result.error.includes('권한') || \n          result.error.includes('permission') ||\n          result.error.includes('accessibility')\n        );\n        \n        if (isPermissionError) {\n          Logger.warn('MONITORING_CONTEXT', '⚠️ 권한 필요:', result.error);\n          // TODO: 권한 요청 모달 표시\n          alert(`접근성 권한이 필요합니다.\\n\\n시스템 설정 → 보안 및 개인정보보호 → 개인정보보호 → 접근성\\n에서 Loop 앱을 허용해주세요.`);\n        } else {\n          Logger.error('MONITORING_CONTEXT', '❌ 모니터링 시작 실패:', result.error);\n        }\n        \n        throw new Error(result.error || 'Failed to start monitoring');\n      }\n      \n      Logger.info('MONITORING_CONTEXT', '✅ 모니터링 시작 성공!');\n    } catch (error) {\n      Logger.error('MONITORING_CONTEXT', 'Error starting monitoring', error);\n      \n      // 🔥 에러 시 상태 롤백 확실히 실행\n      setState(prev => ({\n        ...prev,\n        isMonitoring: false,\n        startTime: null,\n      }));\n      \n      throw error;\n    }\n  }, []);\n\n  const stopMonitoring = useCallback(async (): Promise<void> => {\n    try {\n      Logger.info('MONITORING_CONTEXT', 'Stopping monitoring');\n      \n      // 🔥 버튼 깜빡임 방지: 즉시 상태 업데이트\n      setState(prev => ({\n        ...prev,\n        isMonitoring: false,\n        startTime: null,\n      }));\n      \n      const result = await window.electronAPI.keyboard.stopMonitoring();\n      if (!result.success) {\n        // 실패 시 상태 롤백\n        setState(prev => ({\n          ...prev,\n          isMonitoring: true,\n          startTime: new Date(),\n        }));\n        Logger.error('MONITORING_CONTEXT', 'Failed to stop monitoring', result.error);\n        throw new Error(result.error || 'Failed to stop monitoring');\n      }\n      \n      Logger.info('MONITORING_CONTEXT', 'Monitoring stopped successfully');\n    } catch (error) {\n      // 에러 시 상태 롤백 (모니터링 재개)\n      setState(prev => ({\n        ...prev,\n        isMonitoring: true,\n        startTime: new Date(),\n      }));\n      Logger.error('MONITORING_CONTEXT', 'Error stopping monitoring', error);\n      throw error;\n    }\n  }, []);\n\n  const toggleAI = useCallback((): void => {\n    setState(prev => ({\n      ...prev,\n      isAIOpen: !prev.isAIOpen,\n    }));\n    Logger.info('MONITORING_CONTEXT', 'AI Panel toggled');\n  }, []);\n\n  const updateSessionData = useCallback((data: Partial<MonitoringState['sessionData']>): void => {\n    setState(prev => ({\n      ...prev,\n      sessionData: {\n        ...prev.sessionData,\n        ...data,\n      },\n    }));\n  }, []);\n\n  // 🔥 컨텍스트 값 메모화 (성능 최적화)\n  const contextValue = useMemo<MonitoringContextType>(() => ({\n    state,\n    startMonitoring,\n    stopMonitoring,\n    toggleAI,\n    updateSessionData,\n  }), [state, startMonitoring, stopMonitoring, toggleAI, updateSessionData]);\n\n  return (\n    <MonitoringContext.Provider value={contextValue}>\n      {children}\n    </MonitoringContext.Provider>\n  );\n}\n\n// 🔥 커스텀 훅\nexport function useMonitoring(): MonitoringContextType {\n  const context = useContext(MonitoringContext);\n  if (context === undefined) {\n    throw new Error('useMonitoring must be used within a MonitoringProvider');\n  }\n  return context;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2691, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/loop/loop/src/renderer/components/layout/AppHeader.tsx"],"sourcesContent":["'use client';\n\nimport { Bell, Search, User, Menu, Activity } from 'lucide-react';\nimport { Button } from '../ui/Button';\nimport { SearchInput } from '../ui/Input';\nimport { Avatar } from '../ui/Avatar';\nimport { Badge } from '../ui/Badge';\nimport { HydrationGuard } from '../ui/HydrationGuard';\nimport { useState } from 'react';\nimport { Logger } from '../../../shared/logger';\nimport { useMonitoring } from '../../contexts/GlobalMonitoringContext';\n\n// 🔥 기가차드 규칙: 프리컴파일된 스타일 상수 - macOS 스타일\nconst HEADER_STYLES = {\n  container: 'h-16 bg-white/80 dark:bg-slate-900/80 backdrop-blur-md border-b border-slate-200/50 dark:border-slate-700/50 flex items-center justify-between px-6 z-80 supports-[backdrop-filter]:bg-white/60 dark:supports-[backdrop-filter]:bg-slate-900/60',\n  leftSection: 'flex items-center space-x-4 min-w-0',\n  menuButton: 'lg:hidden',\n  // make search responsive: full width on small screens, flexible on md+ with sensible min/max to avoid overflow\n  searchContainer: 'relative hidden md:block md:flex-1 md:min-w-[260px] md:max-w-md w-full max-w-full min-w-0',\n  rightSection: 'flex items-center space-x-3',\n  notificationButton: 'relative',\n  userSection: 'flex items-center space-x-2',\n  userName: 'hidden sm:block font-medium text-slate-900 dark:text-slate-100',\n} as const;\n\n// 🔥 기가차드 규칙: 명시적 타입 정의\ninterface AppHeaderProps {\n  readonly onMenuToggle?: () => void;\n  readonly user?: {\n    readonly name: string;\n    readonly avatar?: string;\n    readonly status?: 'online' | 'away' | 'busy' | 'offline';\n  };\n  readonly notificationCount?: number;\n  readonly onSearch?: (query: string) => void;\n  readonly onNotificationClick?: () => void;\n  readonly onUserClick?: () => void;\n}\n\nexport function AppHeader({\n  onMenuToggle,\n  user,\n  notificationCount = 0,\n  onSearch,\n  onNotificationClick,\n  onUserClick,\n}: AppHeaderProps): React.ReactElement {\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const { state } = useMonitoring();\n  const { isMonitoring } = state;\n\n  const handleSearch = (event: React.FormEvent<HTMLFormElement>): void => {\n    event.preventDefault();\n    if (searchQuery.trim()) {\n      Logger.info('HEADER', 'Search performed', { query: searchQuery });\n      onSearch?.(searchQuery.trim());\n    }\n  };\n\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setSearchQuery(event.target.value);\n  };\n\n  const handleNotificationClick = (): void => {\n    Logger.info('HEADER', 'Notifications clicked', { count: notificationCount });\n    onNotificationClick?.();\n  };\n\n  const handleUserClick = (): void => {\n    Logger.info('HEADER', 'User menu clicked', { user: user?.name || 'anonymous' });\n    onUserClick?.();\n  };\n\n  const handleMenuToggle = (): void => {\n    Logger.info('HEADER', 'Menu toggle clicked');\n    onMenuToggle?.();\n  };\n\n  return (\n    <header className={HEADER_STYLES.container} role=\"banner\">\n      {/* 좌측 섹션 */}\n      <div className={HEADER_STYLES.leftSection}>\n        {/* 모바일 메뉴 버튼 */}\n        {onMenuToggle && (\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            className={HEADER_STYLES.menuButton}\n            onClick={handleMenuToggle}\n            aria-label=\"메뉴 토글\"\n          >\n            <Menu className=\"w-5 h-5\" />\n          </Button>\n        )}\n\n        {/* 검색 */}\n        <div className={HEADER_STYLES.searchContainer}>\n          <form onSubmit={handleSearch}>\n            <SearchInput\n              placeholder=\"프로젝트, 파일 검색...\"\n              value={searchQuery}\n              onChange={handleSearchChange}\n              aria-label=\"검색어 입력\"\n            />\n          </form>\n        </div>\n      </div>\n\n      {/* 우측 섹션 */}\n      <div className={HEADER_STYLES.rightSection}>\n        {/* 모니터링 상태 표시 */}\n        <HydrationGuard fallback={null}>\n          {isMonitoring && (\n            <div className=\"flex items-center gap-2 px-3 py-1.5 bg-green-100 dark:bg-green-900 text-green-700 dark:text-green-300 rounded-full text-sm\">\n              <Activity className=\"w-4 h-4 animate-pulse\" />\n              <span className=\"font-medium\">모니터링 중</span>\n            </div>\n          )}\n        </HydrationGuard>\n\n        {/* 알림 버튼 */}\n        <div className={HEADER_STYLES.notificationButton}>\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={handleNotificationClick}\n            aria-label={`알림 ${notificationCount}개`}\n          >\n            <Bell className=\"w-5 h-5\" />\n          </Button>\n          {notificationCount > 0 && (\n            <Badge\n              variant=\"danger\"\n              size=\"sm\"\n              className=\"absolute -top-2 -right-2 h-5 w-5 rounded-full p-0 text-xs\"\n            >\n              {notificationCount > 9 ? '9+' : notificationCount}\n            </Badge>\n          )}\n        </div>\n      </div>\n    </header>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;;;;;;AAEA;;;AAVA;;;;;;;;;AAYA,wCAAwC;AACxC,MAAM,gBAAgB;IACpB,WAAW;IACX,aAAa;IACb,YAAY;IACZ,+GAA+G;IAC/G,iBAAiB;IACjB,cAAc;IACd,oBAAoB;IACpB,aAAa;IACb,UAAU;AACZ;AAgBO,SAAS,UAAU,EACxB,YAAY,EACZ,IAAI,EACJ,oBAAoB,CAAC,EACrB,QAAQ,EACR,mBAAmB,EACnB,WAAW,EACI;;IACf,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IACvD,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,0JAAA,CAAA,gBAAa,AAAD;IAC9B,MAAM,EAAE,YAAY,EAAE,GAAG;IAEzB,MAAM,eAAe,CAAC;QACpB,MAAM,cAAc;QACpB,IAAI,YAAY,IAAI,IAAI;YACtB,OAAO,IAAI,CAAC,UAAU,oBAAoB;gBAAE,OAAO;YAAY;YAC/D,WAAW,YAAY,IAAI;QAC7B;IACF;IAEA,MAAM,qBAAqB,CAAC;QAC1B,eAAe,MAAM,MAAM,CAAC,KAAK;IACnC;IAEA,MAAM,0BAA0B;QAC9B,OAAO,IAAI,CAAC,UAAU,yBAAyB;YAAE,OAAO;QAAkB;QAC1E;IACF;IAEA,MAAM,kBAAkB;QACtB,OAAO,IAAI,CAAC,UAAU,qBAAqB;YAAE,MAAM,MAAM,QAAQ;QAAY;QAC7E;IACF;IAEA,MAAM,mBAAmB;QACvB,OAAO,IAAI,CAAC,UAAU;QACtB;IACF;IAEA,qBACE,6LAAC;QAAO,WAAW,cAAc,SAAS;QAAE,MAAK;;0BAE/C,6LAAC;gBAAI,WAAW,cAAc,WAAW;;oBAEtC,8BACC,6LAAC,iJAAA,CAAA,SAAM;wBACL,SAAQ;wBACR,MAAK;wBACL,WAAW,cAAc,UAAU;wBACnC,SAAS;wBACT,cAAW;kCAEX,cAAA,6LAAC,qMAAA,CAAA,OAAI;4BAAC,WAAU;;;;;;;;;;;kCAKpB,6LAAC;wBAAI,WAAW,cAAc,eAAe;kCAC3C,cAAA,6LAAC;4BAAK,UAAU;sCACd,cAAA,6LAAC,gJAAA,CAAA,cAAW;gCACV,aAAY;gCACZ,OAAO;gCACP,UAAU;gCACV,cAAW;;;;;;;;;;;;;;;;;;;;;;0BAOnB,6LAAC;gBAAI,WAAW,cAAc,YAAY;;kCAExC,6LAAC,yJAAA,CAAA,iBAAc;wBAAC,UAAU;kCACvB,8BACC,6LAAC;4BAAI,WAAU;;8CACb,6LAAC,6MAAA,CAAA,WAAQ;oCAAC,WAAU;;;;;;8CACpB,6LAAC;oCAAK,WAAU;8CAAc;;;;;;;;;;;;;;;;;kCAMpC,6LAAC;wBAAI,WAAW,cAAc,kBAAkB;;0CAC9C,6LAAC,iJAAA,CAAA,SAAM;gCACL,SAAQ;gCACR,MAAK;gCACL,SAAS;gCACT,cAAY,CAAC,GAAG,EAAE,kBAAkB,CAAC,CAAC;0CAEtC,cAAA,6LAAC,qMAAA,CAAA,OAAI;oCAAC,WAAU;;;;;;;;;;;4BAEjB,oBAAoB,mBACnB,6LAAC,gJAAA,CAAA,QAAK;gCACJ,SAAQ;gCACR,MAAK;gCACL,WAAU;0CAET,oBAAoB,IAAI,OAAO;;;;;;;;;;;;;;;;;;;;;;;;AAO9C;GAxGgB;;QASI,0JAAA,CAAA,gBAAa;;;KATjB","debugId":null}},
    {"offset": {"line": 2920, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/loop/loop/src/renderer/providers/ThemeProvider.tsx"],"sourcesContent":["'use client';\n\nimport React, { createContext, useContext, useEffect, useState, useCallback } from 'react';\nimport { Logger } from '../../shared/logger';\n\n// 🔥 테마 타입 정의\nexport type Theme = 'light' | 'dark' | 'system';\n\ninterface ThemeContextType {\n  theme: Theme;\n  resolvedTheme: 'light' | 'dark'; // 실제 적용된 테마 (system 해결됨)\n  setTheme: (theme: Theme) => void;\n  toggleTheme: () => void;\n}\n\n// 🔥 Context 생성\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\n// 🔥 프리컴파일된 스타일\nconst THEME_STYLES = {\n  root: 'transition-colors duration-200',\n} as const;\n\ninterface ThemeProviderProps {\n  children: React.ReactNode;\n  defaultTheme?: Theme;\n}\n\nexport function ThemeProvider({ children, defaultTheme = 'system' }: ThemeProviderProps): React.ReactElement {\n  const [theme, setThemeState] = useState<Theme>(() => {\n    // 🔥 하이드레이션 안전: 서버와 클라이언트 초기값 완전 동기화\n    return defaultTheme; // 항상 'system'으로 시작 (서버와 동일)\n  });\n\n  // 클라이언트 초기 렌더에서 서버가 넣어둔 HTML 속성(data-theme / class)을 우선 읽어\n  // 초기값으로 사용하여 hydration mismatch를 방지합니다.\n  // 초기값은 서버가 삽입한 HTML 속성(data-theme/class)을 우선 사용합니다.\n  // 시스템 프리퍼런스(matchMedia)는 클라이언트 마운트 이후에만 적용합니다.\n  const [resolvedTheme, setResolvedTheme] = useState<'light' | 'dark'>(() => {\n    if (typeof window === 'undefined') return 'light';\n    try {\n      const html = document.documentElement;\n      const dataTheme = html.getAttribute('data-theme');\n      if (dataTheme === 'dark' || dataTheme === 'light') return dataTheme as 'light' | 'dark';\n      if (html.classList.contains('dark')) return 'dark';\n      if (html.classList.contains('light')) return 'light';\n      // 아무 설정이 없으면 서버 기본과 동일하게 'light'로 시작\n      return 'light';\n    } catch (e) {\n      return 'light';\n    }\n  });\n\n  // 🔥 시스템 테마 감지\n  const getSystemTheme = useCallback((): 'light' | 'dark' => {\n    if (typeof window === 'undefined') return 'light';\n    return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n  }, []);\n\n  // 🔥 해결된 테마 계산\n  const calculateResolvedTheme = useCallback((currentTheme: Theme): 'light' | 'dark' => {\n    if (currentTheme === 'system') {\n      return getSystemTheme();\n    }\n    return currentTheme;\n  }, [getSystemTheme]);\n\n  // 🔥 테마 설정 함수\n  const setTheme = useCallback(async (newTheme: Theme): Promise<void> => {\n    try {\n      Logger.info('THEME_PROVIDER', 'Theme changing', { from: theme, to: newTheme });\n\n      setThemeState(newTheme);\n      const resolved = calculateResolvedTheme(newTheme);\n      setResolvedTheme(resolved);\n\n      // 🔥 백엔드에 테마 저장\n      try {\n        const result = await window.electronAPI.settings.set('theme', newTheme);\n        if (result.success) {\n          Logger.info('THEME_PROVIDER', 'Theme saved to backend', { theme: newTheme, resolved });\n        } else {\n          Logger.warn('THEME_PROVIDER', 'Failed to save theme to backend', result.error);\n        }\n      } catch (error) {\n        Logger.error('THEME_PROVIDER', 'Error saving theme to backend', error);\n      }\n\n      // 🔥 HTML/Body 속성 및 클래스 업데이트 (즉시)\n      const root = document.documentElement;\n      const body = document.body;\n      root.classList.remove('light', 'dark');\n      root.classList.add(resolved);\n      root.setAttribute('data-theme', resolved);\n      (root.style as CSSStyleDeclaration).colorScheme = resolved;\n      if (body) {\n        body.setAttribute('data-theme', resolved);\n        (body.style as CSSStyleDeclaration).colorScheme = resolved;\n      }\n\n      // 🔥 로컬 스토리지에도 저장 (백업)\n      localStorage.setItem('loop-theme', newTheme);\n\n      Logger.info('THEME_PROVIDER', 'Theme applied successfully', {\n        theme: newTheme,\n        resolved,\n        htmlClass: root.className\n      });\n    } catch (error) {\n      Logger.error('THEME_PROVIDER', 'Error setting theme', error);\n    }\n  }, [theme, calculateResolvedTheme]);\n\n  // 🔥 테마 토글 함수\n  const toggleTheme = useCallback((): void => {\n    const newTheme = resolvedTheme === 'light' ? 'dark' : 'light';\n    setTheme(newTheme);\n  }, [resolvedTheme, setTheme]);\n\n  // 🔥 초기 테마 로드 (깜빡임 방지 - 블로킹 스크립트와 완전 동기화)\n  useEffect(() => {\n    const loadInitialTheme = async (): Promise<void> => {\n      try {\n        // 🔥 블로킹 스크립트에서 이미 HTML 클래스가 설정되었으므로 상태만 동기화\n        const htmlElement = document.documentElement;\n        let currentResolvedTheme: 'light' | 'dark' = 'light';\n\n        // HTML 클래스에서 현재 테마 감지\n        if (htmlElement.classList.contains('dark')) {\n          currentResolvedTheme = 'dark';\n        } else if (htmlElement.classList.contains('light')) {\n          currentResolvedTheme = 'light';\n        }\n\n        // data-theme 속성도 확인\n        const dataTheme = htmlElement.getAttribute('data-theme');\n        if (dataTheme === 'dark' || dataTheme === 'light') {\n          currentResolvedTheme = dataTheme;\n        }\n\n        // 1. 백엔드에서 테마 가져오기 시도 (비동기)\n        let savedTheme: Theme = defaultTheme;\n        let themeSource = 'default';\n\n        try {\n          if (window.electronAPI?.settings?.get) {\n            const result = await window.electronAPI.settings.get('theme');\n            if (result.success && result.data) {\n              const themeValue = result.data as Theme;\n              if (['light', 'dark', 'system'].includes(themeValue)) {\n                savedTheme = themeValue;\n                themeSource = 'backend';\n                Logger.info('THEME_PROVIDER', 'Theme loaded from backend', { theme: savedTheme });\n              }\n            }\n          }\n        } catch (error) {\n          Logger.warn('THEME_PROVIDER', 'Backend not available, using localStorage', error);\n\n          // 2. 로컬 스토리지 폴백\n          try {\n            const localTheme = localStorage.getItem('loop-theme') as Theme;\n            if (localTheme && ['light', 'dark', 'system'].includes(localTheme)) {\n              savedTheme = localTheme;\n              themeSource = 'localStorage';\n              Logger.info('THEME_PROVIDER', 'Theme loaded from localStorage', { theme: savedTheme });\n            }\n          } catch (error) {\n            Logger.warn('THEME_PROVIDER', 'localStorage not available', error);\n          }\n        }\n\n        // 3. 상태 동기화 (HTML 클래스는 이미 설정됨)\n        if (savedTheme !== theme) {\n          setThemeState(savedTheme);\n        }\n\n        const resolved = calculateResolvedTheme(savedTheme);\n\n        // 4. 현재 HTML과 계산된 테마가 다르면 동기화\n        if (resolved !== currentResolvedTheme) {\n          setResolvedTheme(resolved);\n          htmlElement.classList.remove('light', 'dark');\n          htmlElement.classList.add(resolved);\n          htmlElement.setAttribute('data-theme', resolved);\n          htmlElement.style.setProperty('color-scheme', resolved);\n          document.body?.setAttribute('data-theme', resolved);\n          document.body?.style.setProperty('color-scheme', resolved);\n          Logger.info('THEME_PROVIDER', 'Theme synchronized with calculation', {\n            calculated: resolved,\n            current: currentResolvedTheme\n          });\n        } else {\n          // 이미 올바른 테마가 적용됨\n          setResolvedTheme(currentResolvedTheme);\n          // 보수적으로 body에도 동일 속성 보강\n          htmlElement.setAttribute('data-theme', currentResolvedTheme);\n          htmlElement.style.setProperty('color-scheme', currentResolvedTheme);\n          document.body?.setAttribute('data-theme', currentResolvedTheme);\n          document.body?.style.setProperty('color-scheme', currentResolvedTheme);\n          Logger.debug('THEME_PROVIDER', 'Theme already synchronized', {\n            theme: savedTheme,\n            resolved: currentResolvedTheme\n          });\n        }\n\n        Logger.info('THEME_PROVIDER', 'Initial theme loaded successfully', {\n          theme: savedTheme,\n          resolved,\n          source: themeSource,\n          htmlClasses: htmlElement.className\n        });\n      } catch (error) {\n        Logger.error('THEME_PROVIDER', 'Error loading initial theme', error);\n        // 에러 시 안전한 폴백\n        const root = document.documentElement;\n        const body = document.body;\n        root.classList.remove('light', 'dark');\n        root.classList.add('light');\n        root.setAttribute('data-theme', 'light');\n        root.style.setProperty('color-scheme', 'light');\n        if (body) {\n          body.setAttribute('data-theme', 'light');\n          body.style.setProperty('color-scheme', 'light');\n        }\n        setResolvedTheme('light');\n      }\n    };\n\n    // 🔥 즉시 실행 (블로킹 스크립트와 동기화)\n    loadInitialTheme();\n  }, []); // 🔥 의존성 배열을 비워서 한 번만 실행\n\n  // 🔥 시스템 테마 변경 감지\n  useEffect(() => {\n    if (typeof window === 'undefined') return;\n\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n\n    const handleSystemThemeChange = (): void => {\n      if (theme === 'system') {\n        const newResolved = getSystemTheme();\n        setResolvedTheme(newResolved);\n\n        // HTML/Body 클래스 및 속성 업데이트\n        const root = document.documentElement;\n        const body = document.body;\n        root.classList.remove('light', 'dark');\n        root.classList.add(newResolved);\n        root.setAttribute('data-theme', newResolved);\n        root.style.setProperty('color-scheme', newResolved);\n        if (body) {\n          body.setAttribute('data-theme', newResolved);\n          body.style.setProperty('color-scheme', newResolved);\n        }\n\n        Logger.info('THEME_PROVIDER', 'System theme changed', {\n          theme: 'system',\n          resolved: newResolved\n        });\n      }\n    };\n\n    mediaQuery.addEventListener('change', handleSystemThemeChange);\n    return () => mediaQuery.removeEventListener('change', handleSystemThemeChange);\n  }, [theme, getSystemTheme]);\n\n  const contextValue: ThemeContextType = {\n    theme,\n    resolvedTheme,\n    setTheme,\n    toggleTheme,\n  };\n\n  return (\n    <ThemeContext.Provider value={contextValue}>\n      <div className={THEME_STYLES.root} suppressHydrationWarning>\n        {children}\n      </div>\n    </ThemeContext.Provider>\n  );\n}\n\n// 🔥 커스텀 훅\nexport function useTheme(): ThemeContextType {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3256, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/loop/loop/src/renderer/app/ClientLayout.tsx"],"sourcesContent":["'use client';\n\nimport React, { ReactNode, useState, useLayoutEffect, useEffect } from 'react';\nimport { usePathname, useRouter } from 'next/navigation';\nimport { AppSidebar } from '../components/layout/AppSidebar';\nimport { AppHeader } from '../components/layout/AppHeader';\nimport { MonitoringProvider } from '../contexts/GlobalMonitoringContext';\nimport { AuthProvider } from '../contexts/AuthContext';\nimport { ThemeProvider } from '../providers/ThemeProvider';\nimport { Logger } from '../../shared/logger';\nimport './globals.css';\n\ninterface ClientLayoutProps {\n    readonly children: ReactNode;\n    readonly initialAuth?: any;\n}\n\nexport default function ClientLayout({ children, initialAuth }: ClientLayoutProps): React.ReactElement {\n    const [sidebarCollapsed, setSidebarCollapsed] = useState<boolean>(false);\n    const [isClientMounted, setIsClientMounted] = useState<boolean>(false);\n    const pathname = usePathname();\n    const router = useRouter();\n\n    // restore sidebar state before paint\n    useLayoutEffect(() => {\n        if (typeof window !== 'undefined') {\n            try {\n                const savedState = localStorage.getItem('sidebar-collapsed');\n                if (savedState === 'true') {\n                    setSidebarCollapsed(true);\n                }\n                Logger.debug('LAYOUT', 'Sidebar state restored immediately', { collapsed: savedState === 'true' });\n            } catch (error) {\n                Logger.error('LAYOUT', 'Failed to restore sidebar state', error);\n            }\n        }\n        setIsClientMounted(true);\n    }, []);\n\n    const handleNavigate = (href: string): void => {\n        try {\n            if (typeof window === 'undefined') return;\n\n            // Parse the URL to validate it\n            let url: URL | null = null;\n            try {\n                url = new URL(href, window.location.href);\n            } catch (e) {\n                // malformed URL - block navigation\n                Logger.warn('LAYOUT', 'Blocked malformed navigation URL', { href });\n                return;\n            }\n\n            const isSameOrigin = url.origin === window.location.origin;\n            const isRelative = href.startsWith('/');\n\n            if (isRelative || isSameOrigin) {\n                // Use Next.js router for internal navigation (client-side routing)\n                Logger.debug('LAYOUT', 'Client-side navigation', { href });\n                router.push(href);\n            } else {\n                // treat as external - open in new tab/window safely\n                Logger.debug('LAYOUT', 'External navigation', { href });\n                window.open(url.toString(), '_blank', 'noopener,noreferrer');\n            }\n        } catch (e) {\n            Logger.warn('LAYOUT', 'Blocked unsafe navigation attempt', { href, error: e });\n        }\n    };\n\n    const handleToggleSidebar = (): void => {\n        const newState = !sidebarCollapsed;\n        setSidebarCollapsed(newState);\n\n        if (typeof window !== 'undefined') {\n            try {\n                localStorage.setItem('sidebar-collapsed', newState.toString());\n                Logger.debug('LAYOUT', 'Sidebar state saved', { collapsed: newState });\n            } catch (error) {\n                Logger.error('LAYOUT', 'Failed to save sidebar state', error);\n            }\n        }\n    };\n\n    return (\n        <ThemeProvider defaultTheme=\"system\">\n            <AuthProvider initialAuth={initialAuth}>\n                <MonitoringProvider>\n                    <div className=\"min-h-screen flex min-w-0 app-root\">\n                        <aside className=\"flex-shrink-0\">\n                            <AppSidebar\n                                activeRoute={pathname}\n                                onNavigate={handleNavigate}\n                                collapsed={sidebarCollapsed}\n                                onToggleCollapse={handleToggleSidebar}\n                            />\n                        </aside>\n\n                        <main className=\"flex-1 flex flex-col min-w-0\">\n                            <header className=\"flex-shrink-0\">\n                                <AppHeader />\n                            </header>\n\n                            <div className=\"flex-1 min-w-0 p-6 overflow-y-auto\">\n                                {children}\n                            </div>\n                        </main>\n                    </div>\n                </MonitoringProvider>\n            </AuthProvider>\n        </ThemeProvider>\n    );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AARA;;;;;;;;;;AAiBe,SAAS,aAAa,EAAE,QAAQ,EAAE,WAAW,EAAqB;;IAC7E,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IAClE,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IAChE,MAAM,WAAW,CAAA,GAAA,qIAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,qCAAqC;IACrC,CAAA,GAAA,6JAAA,CAAA,kBAAe,AAAD;wCAAE;YACZ,wCAAmC;gBAC/B,IAAI;oBACA,MAAM,aAAa,aAAa,OAAO,CAAC;oBACxC,IAAI,eAAe,QAAQ;wBACvB,oBAAoB;oBACxB;oBACA,OAAO,KAAK,CAAC,UAAU,sCAAsC;wBAAE,WAAW,eAAe;oBAAO;gBACpG,EAAE,OAAO,OAAO;oBACZ,OAAO,KAAK,CAAC,UAAU,mCAAmC;gBAC9D;YACJ;YACA,mBAAmB;QACvB;uCAAG,EAAE;IAEL,MAAM,iBAAiB,CAAC;QACpB,IAAI;YACA,uCAAmC;;YAAM;YAEzC,+BAA+B;YAC/B,IAAI,MAAkB;YACtB,IAAI;gBACA,MAAM,IAAI,IAAI,MAAM,OAAO,QAAQ,CAAC,IAAI;YAC5C,EAAE,OAAO,GAAG;gBACR,mCAAmC;gBACnC,OAAO,IAAI,CAAC,UAAU,oCAAoC;oBAAE;gBAAK;gBACjE;YACJ;YAEA,MAAM,eAAe,IAAI,MAAM,KAAK,OAAO,QAAQ,CAAC,MAAM;YAC1D,MAAM,aAAa,KAAK,UAAU,CAAC;YAEnC,IAAI,cAAc,cAAc;gBAC5B,mEAAmE;gBACnE,OAAO,KAAK,CAAC,UAAU,0BAA0B;oBAAE;gBAAK;gBACxD,OAAO,IAAI,CAAC;YAChB,OAAO;gBACH,oDAAoD;gBACpD,OAAO,KAAK,CAAC,UAAU,uBAAuB;oBAAE;gBAAK;gBACrD,OAAO,IAAI,CAAC,IAAI,QAAQ,IAAI,UAAU;YAC1C;QACJ,EAAE,OAAO,GAAG;YACR,OAAO,IAAI,CAAC,UAAU,qCAAqC;gBAAE;gBAAM,OAAO;YAAE;QAChF;IACJ;IAEA,MAAM,sBAAsB;QACxB,MAAM,WAAW,CAAC;QAClB,oBAAoB;QAEpB,wCAAmC;YAC/B,IAAI;gBACA,aAAa,OAAO,CAAC,qBAAqB,SAAS,QAAQ;gBAC3D,OAAO,KAAK,CAAC,UAAU,uBAAuB;oBAAE,WAAW;gBAAS;YACxE,EAAE,OAAO,OAAO;gBACZ,OAAO,KAAK,CAAC,UAAU,gCAAgC;YAC3D;QACJ;IACJ;IAEA,qBACI,6LAAC,iJAAA,CAAA,gBAAa;QAAC,cAAa;kBACxB,cAAA,6LAAC,8IAAA,CAAA,eAAY;YAAC,aAAa;sBACvB,cAAA,6LAAC,0JAAA,CAAA,qBAAkB;0BACf,cAAA,6LAAC;oBAAI,WAAU;;sCACX,6LAAC;4BAAM,WAAU;sCACb,cAAA,6LAAC,yJAAA,CAAA,aAAU;gCACP,aAAa;gCACb,YAAY;gCACZ,WAAW;gCACX,kBAAkB;;;;;;;;;;;sCAI1B,6LAAC;4BAAK,WAAU;;8CACZ,6LAAC;oCAAO,WAAU;8CACd,cAAA,6LAAC,wJAAA,CAAA,YAAS;;;;;;;;;;8CAGd,6LAAC;oCAAI,WAAU;8CACV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQjC;GA/FwB;;QAGH,qIAAA,CAAA,cAAW;QACb,qIAAA,CAAA,YAAS;;;KAJJ","debugId":null}}]
}